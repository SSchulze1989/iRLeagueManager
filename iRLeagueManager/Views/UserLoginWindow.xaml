<!--MIT License

Copyright (c) 2020 Simon Schulze

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.-->

<Window x:Class="iRLeagueManager.Views.UserLoginWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:iRLeagueManager.Views"
        xmlns:views="clr-namespace:iRLeagueManager.Views"
        xmlns:vmodel="clr-namespace:iRLeagueManager.ViewModels"
        xmlns:controls="clr-namespace:iRLeagueManager.Controls"
        xmlns:fa="http://schemas.fontawesome.io/icons/"
        xmlns:conv="clr-namespace:iRLeagueManager.Converters"
        mc:Ignorable="d"
        Title="iRLeagueManager - Login" Width="400" Height="420"
        FontSize="{DynamicResource Global.FontSizeLarge}"
        FontFamily="{DynamicResource Global.FontFamily}"
        Background="Transparent"
        AllowsTransparency="True"
        ResizeMode="NoResize">
    
    <Window.Resources>
        <conv:InvertBoolConverter x:Key="InvertBoolConverter"/>
        <SolidColorBrush x:Key="TextBox.Static.Border" Color="#FFABAdB3"/>
        <SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="#FF7EB4EA"/>
        <SolidColorBrush x:Key="TextBox.Focus.Border" Color="#FF569DE5"/>
        <Style x:Key="TextBoxStyle" TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="{StaticResource ThemeColor_Back4}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0,0,0,2" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderThickness" TargetName="border" Value="1,1,1,2"/>
                                <Setter Property="Margin" TargetName="border" Value="-1,-1,-1,0"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter Property="BorderThickness" TargetName="border" Value="1,1,1,2"/>
                                <Setter Property="Margin" TargetName="border" Value="-1,-1,-1,0"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                        <Condition Property="IsSelectionActive" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                </MultiTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="PasswordBoxStyle" TargetType="{x:Type PasswordBox}">
            <Setter Property="PasswordChar" Value="●"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="{StaticResource ThemeColor_Back4}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="0,0,0,2"/>
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type PasswordBox}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0,0,0,2" 
                                Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" 
                                          VerticalScrollBarVisibility="Hidden"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Margin" TargetName="border" Value="-1,-1,-1,0"/>
                                <Setter Property="BorderThickness" TargetName="border" Value="1,1,1,2"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter Property="Margin" TargetName="border" Value="-1,-1,-1,0"/>
                                <Setter Property="BorderThickness" TargetName="border" Value="1,1,1,2"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                        <Condition Property="IsSelectionActive" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                </MultiTrigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>

    <Window.DataContext>
        <vmodel:LoginViewModel/>
    </Window.DataContext>
    
    <Grid Width="Auto" Height="Auto" MouseDown="Window_MouseDown">
        <!--<Rectangle HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Fill="White" Stroke="DarkBlue"/>-->
        <Border x:Name="WindowBorder" Margin="5" Padding="0" BorderThickness="1" BorderBrush="{StaticResource ThemeColor_Back3}" 
                Background="White" CornerRadius="0">
            <Border.Effect>
                <DropShadowEffect ShadowDepth="2" BlurRadius="7" Color="#EE000000"/>
            </Border.Effect>
            <Grid ClipToBounds="True">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition />
                </Grid.RowDefinitions>
                <Border Grid.Row="0" Padding="0,0" BorderThickness="0,0,0,1" BorderBrush="{StaticResource ThemeColor_Back3}" CornerRadius="0" 
                        Background="{StaticResource ThemeColor_DarkBlue}" MouseDown="Window_MouseDown">
                    <DockPanel>
                        <controls:IconButton DockPanel.Dock="Right" VerticalAlignment="Center" 
                                             HorizontalContentAlignment="Center" VerticalContentAlignment="Center" 
                                             Margin="0,0,-2,0" Padding="18,18" IconMargin="-2,-4,2,0"
                                             Command="{Binding CloseButtonCommand}" Click="Button_Click"
                                             IconFill="WhiteSmoke" CornerRadius="0"
                                             Foreground="White">
                            <controls:IconButton.Content>
                                <Viewbox Height="20">
                                    <ContentControl Content="{StaticResource closeThick}" Margin="-2,-4,2,0"/>
                                </Viewbox>
                            </controls:IconButton.Content>
                            <controls:IconButton.Style>
                                <Style TargetType="controls:IconButton" BasedOn="{StaticResource {x:Type controls:IconButton}}">
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="Red"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </controls:IconButton.Style>
                        </controls:IconButton>
                        <TextBlock Text="{Binding Path=Title, RelativeSource={RelativeSource AncestorType=Window}}" 
                                   FontSize="{StaticResource Global.FontSizeLarge}" Foreground="WhiteSmoke"
                                   HorizontalAlignment="Left" Margin="15,10" VerticalAlignment="Center"/>
                    </DockPanel>
                </Border>
                <Grid ClipToBounds="True" Grid.Row="1">
                    <StackPanel HorizontalAlignment="Stretch" Margin="10,20" Grid.Row="1">
                        <TextBlock HorizontalAlignment="Left" Margin="7,5,5,2" Text="Username:" Foreground="{StaticResource ThemeColor_Back5}"/>
                        <TextBox x:Name="UserNameTextBox" Text="{Binding UserName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                 HorizontalAlignment="Stretch" Margin="5,2" IsEnabled="{Binding IsLoading, Converter={StaticResource InvertBoolConverter}}"
                                 Padding="2" Style="{DynamicResource TextBoxStyle}" KeyUp="InputBox_KeyUp" TabIndex="0"/>
                        <Separator Margin="8" Visibility="Hidden"/>
                        <TextBlock HorizontalAlignment="Left" Margin="7,2,5,2" Text="Password:" Foreground="{StaticResource ThemeColor_Back5}"/>
                        <PasswordBox x:Name="PasswordTextBox"  PasswordChanged="PasswordTextBox_PasswordChanged" HorizontalAlignment="Stretch" Margin="5,0"
                                     Padding="2" IsEnabled="{Binding IsLoading, Converter={StaticResource InvertBoolConverter}}" Style="{DynamicResource PasswordBoxStyle}"
                                     KeyUp="InputBox_KeyUp" TabIndex="1" x:FieldModifier="private"/>
                        <TextBlock x:Name="LoginStatusMessage" Text="{Binding StatusMessage}" HorizontalAlignment="Stretch" 
                                   Margin="5,10" Foreground="Red" FontSize="{StaticResource Global.FontSizeMedium}" TextWrapping="WrapWithOverflow" Height="38"/>
                        <CheckBox IsChecked="{Binding RememberMe}" Content="Remember Me" Margin="7,0"/>
                        <Grid Margin="0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <controls:IconButton x:Name="SubmitButton" Grid.Column="0" Margin="5,10,5,10" Content="Submit" Click="SubmitButton_Click" 
                                                 IsEnabled="{Binding IsLoading, Converter={StaticResource InvertBoolConverter}}" CornerRadius="20"
                                                 Background="{StaticResource ThemeColor_Back5}" BorderBrush="{StaticResource ThemeColor_Back5}"
                                                 Foreground="WhiteSmoke" Padding="0,8" TabIndex="2"/>
                            <controls:IconButton Grid.Column="1" Command="{Binding CloseButtonCommand}" Margin="5,10,5,10" 
                                                 Content="Cancel" Click="Button_Click" BorderThickness="2" CornerRadius="20"
                                                 Background="Transparent" BorderBrush="{StaticResource ThemeColor_Back5}" Padding="0,8" TabIndex="3"/>
                        </Grid>
                        <TextBlock Margin="5">
                <Hyperlink Click="Hyperlink_Click">Register new User</Hyperlink>
                        </TextBlock>
                    </StackPanel>
                    <Border VerticalAlignment="Top" x:Name="bottom_dropshadow" Margin="-5,-12,-5,0" BorderBrush="Black" BorderThickness="0,5"
                            Background="Transparent" Grid.Row="1">
                        <Border.Effect>
                            <DropShadowEffect ShadowDepth="4" BlurRadius="7" Color="Black" Direction="270"/>
                        </Border.Effect>
                    </Border>
                </Grid>
            </Grid>
        </Border>
        <Grid>
            <Grid.Style>
                <Style TargetType="Grid">
                    <Setter Property="Visibility" Value="Collapsed"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsLoading}" Value="True">
                            <Setter Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Style>
            <Rectangle VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Fill="DarkGray" Opacity="0.5" Margin="5"/>
            <fa:ImageAwesome Icon="CircleOutlineNotch" Height="60" Width="60" Spin="True" VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="#353535"/>
        </Grid>
    </Grid>
</Window>

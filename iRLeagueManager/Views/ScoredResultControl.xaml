<!--MIT License

Copyright (c) 2020 Simon Schulze

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.-->

<UserControl x:Class="iRLeagueManager.Views.ScoredResultControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:vmodel="clr-namespace:iRLeagueManager.ViewModels"
             xmlns:local="clr-namespace:iRLeagueManager.Views"
             xmlns:controls="clr-namespace:iRLeagueManager.Controls"
             xmlns:conv="clr-namespace:iRLeagueManager.Converters"
             xmlns:fa="http://schemas.fontawesome.io/icons/"
             mc:Ignorable="d"  
             d:DesignHeight="600" d:DesignWidth="800" Background="White"
             FontSize="{StaticResource Global.FontSizeMedium}"
             FontFamily="{StaticResource Global.FontFamily}">
    <!--<UserControl.DataContext>
        <vmodel:ResultsPageViewModel/>
    </UserControl.DataContext>-->
    <UserControl.Resources>
        <conv:MultiValueEqualsConverter x:Key="MultiValueEqualsConverter"/>
        <conv:LapIntervalStringConverter x:Key="LapIntervalStringConverter"/>
        <conv:CompareNumericalConverter x:Key="CompareNumericalConverter"/>
        <conv:UniversalColorConverter x:Key="UniversalColorConverter"/>
        <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Transparent"/>
        <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="Black"/>
        <Thickness x:Key="ColumnMargin">4,2</Thickness>
        <Style TargetType="TextBlock" x:Key="TextColumnElementStyle">
            <Setter Property="Margin" Value="{StaticResource ColumnMargin}"/>
        </Style>
        <Style TargetType="DataGridCell" x:Key="ResultsGridCellStyle">
            <Setter Property="Padding" Value="4,0"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridCell}">
                        <Border Padding="{TemplateBinding Padding}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="IsManipulationEnabled" Value="False"/>
        </Style>
        <DataTemplate x:Key="AddPenaltyCellTemplate">
            <StackPanel Orientation="Horizontal">
                <ComboBox SelectedValue="{Binding AddPenalty.PenaltyPoints, UpdateSourceTrigger=PropertyChanged}" 
                                                          DisplayMemberPath="" SelectedValuePath="Content" Width="40" VerticalContentAlignment="Center"
                                                          Margin="0" Height="25">
                    <ComboBox.Style>
                        <Style TargetType="ComboBox">
                            <Setter Property="IsReadOnly" Value="True"/>
                            <Setter Property="IsEnabled" Value="False"/>
                            <Setter Property="Visibility" Value="Visible"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsPenaltyEdit}" Value="True">
                                    <Setter Property="IsReadOnly" Value="False"/>
                                    <Setter Property="IsEnabled" Value="True"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding AddPenalty}" Value="{x:Null}">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ComboBox.Style>
                    <ComboBox.Items>
                        <ComboBoxItem>0</ComboBoxItem>
                        <ComboBoxItem>1</ComboBoxItem>
                        <ComboBoxItem>2</ComboBoxItem>
                        <ComboBoxItem>3</ComboBoxItem>
                        <ComboBoxItem>4</ComboBoxItem>
                        <ComboBoxItem>5</ComboBoxItem>
                        <ComboBoxItem>6</ComboBoxItem>
                        <ComboBoxItem>7</ComboBoxItem>
                        <ComboBoxItem>8</ComboBoxItem>
                        <ComboBoxItem>9</ComboBoxItem>
                        <ComboBoxItem>10</ComboBoxItem>
                    </ComboBox.Items>
                </ComboBox>
                <controls:IconButton IconMargin="-2,-4,0,0" Width="28" Height="25" Padding="5">
                    <controls:IconButton.Style>
                        <Style TargetType="controls:IconButton" BasedOn="{StaticResource {x:Type controls:IconButton}}">
                            <Setter Property="Command" Value="{Binding EndEditPenaltyCmd}"/>
                            <Setter Property="IconFill" Value="Green"/>
                            <!--<Setter Property="IconContent" Value="{StaticResource checkBold}"/>-->
                            <Setter Property="IconContent">
                                <Setter.Value>
                                    <Viewbox>
                                        <ContentControl Content="{DynamicResource checkBold}"/>
                                    </Viewbox>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsPenaltyEdit}" Value="False">
                                    <Setter Property="Command" Value="{Binding StartEditPenaltyCmd}"/>
                                    <Setter Property="IconFill" Value="Black" />
                                    <!--<Setter Property="IconContent" Value="{StaticResource pencilOutline}"/>-->
                                    <Setter Property="IconContent">
                                        <Setter.Value>
                                            <Viewbox>
                                                <ContentControl Content="{DynamicResource pencilOutline}"/>
                                            </Viewbox>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding AddPenalty}" Value="{x:Null}">
                                    <Setter Property="Command" Value="{Binding AddPenaltyCmd}"/>
                                    <Setter Property="IconFill" Value="Black"/>
                                    <!--<Setter Property="IconContent" Value="{StaticResource PencilPlusOutline}"/>-->
                                    <Setter Property="IconContent">
                                        <Setter.Value>
                                            <Viewbox>
                                                <ContentControl Content="{DynamicResource PencilPlusOutline}"/>
                                            </Viewbox>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </controls:IconButton.Style>
                </controls:IconButton>
                <controls:IconButton IconMargin="-2,-4,0,0" Width="28" Height="25" Padding="5"
                                                    Command="{Binding DeletePenaltyCmd}"
                                                    IconContent="{DynamicResource closeThick}">
                    <controls:IconButton.Style>
                        <Style TargetType="controls:IconButton" BasedOn="{StaticResource {x:Type controls:IconButton}}">
                            <Setter Property="Visibility" Value="Visible"/>
                            <Setter Property="IconFill" Value="Red"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding AddPenalty}" Value="{x:Null}">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </controls:IconButton.Style>
                </controls:IconButton>
            </StackPanel>
        </DataTemplate>
        <Style TargetType="DataGridRowHeader" x:Key="DataGridRowHeaderStyle">
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Width" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridRowHeader}">
                        <Border Padding="{TemplateBinding Padding}" BorderBrush="{TemplateBinding BorderBrush}" 
                                                        BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" 
                                                        SnapsToDevicePixels="True">
                            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="DataGridColumnHeader" x:Key="DataGridColumnHeaderStyle">
            <Setter Property="Padding" Value="5"/>
            <Setter Property="TextElement.FontWeight" Value="Bold"/>
            <Setter Property="TextElement.FontSize" Value="{StaticResource Global.FontSizeMedium}"/>
            <Setter Property="Background" Value="{StaticResource ThemeColor_Back0}"/>
            <Setter Property="BorderBrush" Value="Black"/>
            <Setter Property="BorderThickness" Value="0,0,1,2"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Height" Value="Auto"/>
            <Setter Property="TextBlock.TextAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
        </Style>
    </UserControl.Resources>

    <Grid ClipToBounds="True" Margin="0">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <TextBlock Text="Select Session:" Margin="5" FontWeight="Bold" FontSize="{StaticResource Global.FontSizeLarge}"/>

        <Border Grid.Row="1" BorderBrush="DarkGray" BorderThickness="0,0,0,0.5">
            <Grid Grid.Row="1" DataContext="{Binding SessionSelect}" Margin="0,0,8,5">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" MaxWidth="900"/>
                </Grid.ColumnDefinitions>
                <local:SessionSelectControl Grid.Row="1" HorizontalAlignment="Stretch">
                    <local:SessionSelectControl.ItemTemplate>
                        <DataTemplate DataType="{x:Type ComboBoxItem}">
                            <StackPanel Orientation="Horizontal">
                                <TextBlock>
                                    <TextBlock.Text>
                                        <MultiBinding StringFormat="{}{0} - {1} ({2})">
                                            <Binding Path="RaceDate" StringFormat="Date"/>
                                            <Binding Path="Location.FullName"/>
                                            <Binding Path="Schedule.Name"/>
                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>
                                <TextBlock Text="    (Current)">
                                    <TextBlock.Style>
                                        <Style TargetType="TextBlock">
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsCurrentSession}" Value="True">
                                                    <Setter Property="Visibility" Value="Visible"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                            </StackPanel>
                        </DataTemplate>
                    </local:SessionSelectControl.ItemTemplate>
                </local:SessionSelectControl >
            </Grid>
        </Border>

        <Grid ClipToBounds="True" Grid.Row="2" VerticalAlignment="Stretch" Background="Transparent">
            <TabControl ItemsSource="{Binding CurrentResults}" Margin="0" 
                        VerticalContentAlignment="Stretch" IsSynchronizedWithCurrentItem="True">
                <TabControl.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding ScoringName}" FontSize="{StaticResource Global.FontSizeLarge}" FontWeight="Bold" Margin="4,8"/>
                    </DataTemplate>
                </TabControl.ItemTemplate>
                <TabControl.Resources>
                    <DataTemplate DataType="{x:Type vmodel:ScoredTeamResultViewModel}">
                        <DataGrid ItemsSource="{Binding TeamResults}" AutoGenerateColumns="False" VerticalAlignment="Stretch" 
                                  AlternationCount="2" AlternatingRowBackground="#F0F0F0"
                                  TextElement.FontSize="{StaticResource Global.FontSizeSmall}" 
                                  ScrollViewer.VerticalScrollBarVisibility="Auto"
                                  HorizontalAlignment="Stretch" CanUserAddRows="False" CanUserDeleteRows="False" 
                                  SelectionUnit="FullRow" SelectionMode="Single"
                                  ScrollViewer.CanContentScroll="False"
                                  HorizontalScrollBarVisibility="Disabled" RowDetailsVisibilityMode="Collapsed"
                                  RowHeight="30" MaxHeight="4000" MaxWidth="4000"
                                  Margin="5" Style="{StaticResource DataGridStyle}">
                            <DataGrid.CellStyle>
                                <Style TargetType="DataGridCell" BasedOn="{StaticResource ResultsGridCellStyle}"/>
                            </DataGrid.CellStyle>
                            <DataGrid.RowHeaderStyle>
                                <Style TargetType="DataGridRowHeader" BasedOn="{StaticResource DataGridRowHeaderStyle}"/>
                            </DataGrid.RowHeaderStyle>
                            <DataGrid.RowDetailsTemplate>
                                <DataTemplate>
                                    <DataGrid ItemsSource="{Binding ScoredResultRows}" AutoGenerateColumns="False" VerticalAlignment="Stretch" 
                                              Background="Transparent" RowBackground="#FFFAE4"
                                              TextElement.FontSize="{StaticResource Global.FontSizeSmall}"
                                              BorderBrush="Black" BorderThickness="1"
                                              PreviewMouseWheel="DataGrid_PreviewMouseWheel"
                                              HorizontalScrollBarVisibility="Disabled"
                                              RowHeight="30" CanUserAddRows="False" CanUserDeleteRows="False" 
                                              SelectionUnit="FullRow" SelectionMode="Single"
                                              Margin="14,-1,-1,-2" Style="{StaticResource DataGridStyle}">
                                        <DataGrid.CellStyle>
                                            <Style TargetType="DataGridCell" BasedOn="{StaticResource ResultsGridCellStyle}"/>
                                        </DataGrid.CellStyle>
                                        <DataGrid.RowHeaderStyle>
                                            <Style TargetType="DataGridRowHeader">
                                                <Setter Property="Padding" Value="0"/>
                                                <Setter Property="Width" Value="0"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type DataGridRowHeader}">
                                                            <Border Padding="{TemplateBinding Padding}" BorderBrush="{TemplateBinding BorderBrush}" 
                                                                    BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" 
                                                                    SnapsToDevicePixels="True">
                                                                <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                            </Border>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </DataGrid.RowHeaderStyle>
                                        <DataGrid.ColumnHeaderStyle>
                                            <Style TargetType="DataGridColumnHeader">
                                                <Setter Property="Visibility" Value="Collapsed"/>
                                            </Style>
                                        </DataGrid.ColumnHeaderStyle>
                                        <DataGrid.Columns>
                                            <DataGridTextColumn Header="Pos." Binding="{Binding FinalPosition, StringFormat={}{0}.}" IsReadOnly="True" Width="30" 
                                                    MinWidth="30" TextElement.FontWeight="Bold">
                                                <DataGridTextColumn.ElementStyle>
                                                    <Style TargetType="TextBlock" BasedOn="{StaticResource TextColumnElementStyle}">
                                                        <Setter Property="TextAlignment" Value="Center"/>
                                                    </Style>
                                                </DataGridTextColumn.ElementStyle>
                                            </DataGridTextColumn>
                                            <DataGridTextColumn Header="Name" Binding="{Binding Member.FullName}" IsReadOnly="True" Width="*" MinWidth="150"
                                                                ElementStyle="{StaticResource TextColumnElementStyle}" MaxWidth="550"/>
                                            <DataGridTextColumn Header="Fast Lap" IsReadOnly="True" Width="100" MinWidth="90">
                                                <DataGridTextColumn.ElementStyle>
                                                    <Style TargetType="TextBlock" BasedOn="{StaticResource TextColumnElementStyle}">
                                                        <Setter Property="TextAlignment" Value="Center"/>
                                                    </Style>
                                                </DataGridTextColumn.ElementStyle>
                                                <DataGridTextColumn.Binding>
                                                    <MultiBinding StringFormat="{}{0:00}:{1:00},{2:000}">
                                                        <Binding Path="FastestLapTime.Minutes"/>
                                                        <Binding Path="FastestLapTime.Seconds"/>
                                                        <Binding Path="FastestLapTime.Milliseconds"/>
                                                    </MultiBinding>
                                                </DataGridTextColumn.Binding>
                                            </DataGridTextColumn>
                                            <DataGridTextColumn Header="Avg. Lap" IsReadOnly="True" Width="100" MinWidth="90">
                                                <DataGridTextColumn.ElementStyle>
                                                    <Style TargetType="TextBlock" BasedOn="{StaticResource TextColumnElementStyle}">
                                                        <Setter Property="TextAlignment" Value="Center"/>
                                                    </Style>
                                                </DataGridTextColumn.ElementStyle>
                                                <DataGridTextColumn.Binding>
                                                    <MultiBinding StringFormat="{}{0:00}:{1:00},{2:000}">
                                                        <Binding Path="AvgLapTime.Minutes"/>
                                                        <Binding Path="AvgLapTime.Seconds"/>
                                                        <Binding Path="AvgLapTime.Milliseconds"/>
                                                    </MultiBinding>
                                                </DataGridTextColumn.Binding>
                                            </DataGridTextColumn>
                                            <DataGridTextColumn Header="Interval" Binding="{Binding Interval, Converter={StaticResource LapIntervalStringConverter}}" 
                                                    Width="100" MinWidth="90">
                                                <DataGridTextColumn.ElementStyle>
                                                    <Style TargetType="TextBlock" BasedOn="{StaticResource TextColumnElementStyle}">
                                                        <Setter Property="TextAlignment" Value="Center"/>
                                                    </Style>
                                                </DataGridTextColumn.ElementStyle>
                                            </DataGridTextColumn>
                                            <DataGridTextColumn Binding="{Binding RacePoints}" IsReadOnly="True" Width="90" MinWidth="50">
                                                <DataGridTextColumn.ElementStyle>
                                                    <Style TargetType="TextBlock" BasedOn="{StaticResource TextColumnElementStyle}">
                                                        <Setter Property="TextAlignment" Value="Center"/>
                                                    </Style>
                                                </DataGridTextColumn.ElementStyle>
                                                <DataGridTextColumn.Header>
                                                    <TextBlock Text="Race Pts." TextWrapping="Wrap"/>
                                                </DataGridTextColumn.Header>
                                            </DataGridTextColumn>
                                            <DataGridTextColumn Binding="{Binding BonusPoints, StringFormat={}{0:+#;-#;-}}" IsReadOnly="True" Width="90" MinWidth="58">
                                                <DataGridTextColumn.ElementStyle>
                                                    <Style TargetType="TextBlock" BasedOn="{StaticResource TextColumnElementStyle}">
                                                        <Setter Property="TextAlignment" Value="Center"/>
                                                    </Style>
                                                </DataGridTextColumn.ElementStyle>
                                                <DataGridTextColumn.Header>
                                                    <TextBlock Text="Bonus Pts." TextWrapping="Wrap"/>
                                                </DataGridTextColumn.Header>
                                            </DataGridTextColumn>
                                            <DataGridTextColumn Binding="{Binding PenaltyPoints, StringFormat={}{0:-#;+#;-}}" IsReadOnly="True" Width="90" MinWidth="50">
                                                <DataGridTextColumn.ElementStyle>
                                                    <Style TargetType="TextBlock" BasedOn="{StaticResource TextColumnElementStyle}">
                                                        <Setter Property="TextAlignment" Value="Center"/>
                                                    </Style>
                                                </DataGridTextColumn.ElementStyle>
                                                <DataGridTextColumn.Header>
                                                    <TextBlock Text="Pen. Pts." TextWrapping="WrapWithOverflow"/>
                                                </DataGridTextColumn.Header>
                                                <DataGridTextColumn.CellStyle>
                                                    <Style TargetType="DataGridCell" BasedOn="{StaticResource ResultsGridCellStyle}">
                                                        <Setter Property="Foreground" Value="Red"/>
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding PenaltyPoints}" Value="0">
                                                                <Setter Property="Foreground" Value="Black"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </DataGridTextColumn.CellStyle>
                                            </DataGridTextColumn>
                                            <DataGridTextColumn Binding="{Binding TotalPoints}" IsReadOnly="True" Width="90" MinWidth="50">
                                                <DataGridTextColumn.ElementStyle>
                                                    <Style TargetType="TextBlock" BasedOn="{StaticResource TextColumnElementStyle}">
                                                        <Setter Property="TextAlignment" Value="Center"/>
                                                    </Style>
                                                </DataGridTextColumn.ElementStyle>
                                                <DataGridTextColumn.Header>
                                                    <TextBlock Text="Total Pts." TextWrapping="Wrap"/>
                                                </DataGridTextColumn.Header>
                                            </DataGridTextColumn>
                                            <DataGridTemplateColumn Header="Add Penalty" Width="105" MinWidth="105">
                                                <DataGridTemplateColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <StackPanel Orientation="Horizontal">
                                                            <TextBox Text="{Binding AddPenalty.Penalty}">
                                                                <TextBox.Style>
                                                                    <Style TargetType="TextBox">
                                                                        <Setter Property="IsReadOnly" Value="True"/>
                                                                        <Setter Property="IsEnabled" Value="False"/>
                                                                        <Setter Property="Visibility" Value="Visible"/>
                                                                        <Style.Triggers>
                                                                            <DataTrigger Binding="{Binding IsPenaltyEdit}" Value="True">
                                                                                <Setter Property="IsReadOnly" Value="False"/>
                                                                                <Setter Property="IsEnabled" Value="True"/>
                                                                            </DataTrigger>
                                                                            <DataTrigger Binding="{Binding AddPenalty}" Value="{x:Null}">
                                                                                <Setter Property="Visibility" Value="Collapsed"/>
                                                                            </DataTrigger>
                                                                        </Style.Triggers>
                                                                    </Style>
                                                                </TextBox.Style>
                                                            </TextBox>
                                                            <!--<ComboBox SelectedValue="{Binding AddPenalty.PenaltyPoints, UpdateSourceTrigger=PropertyChanged}" 
                                                                      DisplayMemberPath="" SelectedValuePath="Content" Width="40" VerticalContentAlignment="Center"
                                                                      Margin="0" Height="25">
                                                                <ComboBox.Style>
                                                                    <Style TargetType="ComboBox">
                                                                        <Setter Property="IsReadOnly" Value="True"/>
                                                                        <Setter Property="IsEnabled" Value="False"/>
                                                                        <Setter Property="Visibility" Value="Visible"/>
                                                                        <Style.Triggers>
                                                                            <DataTrigger Binding="{Binding IsPenaltyEdit}" Value="True">
                                                                                <Setter Property="IsReadOnly" Value="False"/>
                                                                                <Setter Property="IsEnabled" Value="True"/>
                                                                            </DataTrigger>
                                                                            <DataTrigger Binding="{Binding AddPenalty}" Value="{x:Null}">
                                                                                <Setter Property="Visibility" Value="Collapsed"/>
                                                                            </DataTrigger>
                                                                        </Style.Triggers>
                                                                    </Style>
                                                                </ComboBox.Style>
                                                                <ComboBox.Items>
                                                                    <ComboBoxItem>0</ComboBoxItem>
                                                                    <ComboBoxItem>1</ComboBoxItem>
                                                                    <ComboBoxItem>2</ComboBoxItem>
                                                                    <ComboBoxItem>3</ComboBoxItem>
                                                                    <ComboBoxItem>4</ComboBoxItem>
                                                                    <ComboBoxItem>5</ComboBoxItem>
                                                                    <ComboBoxItem>6</ComboBoxItem>
                                                                    <ComboBoxItem>7</ComboBoxItem>
                                                                    <ComboBoxItem>8</ComboBoxItem>
                                                                    <ComboBoxItem>9</ComboBoxItem>
                                                                    <ComboBoxItem>10</ComboBoxItem>
                                                                </ComboBox.Items>
                                                            </ComboBox>-->
                                                            <controls:IconButton IconMargin="-2,-4,0,0" Width="28" Height="25" Padding="5">
                                                                <controls:IconButton.Style>
                                                                    <Style TargetType="controls:IconButton" BasedOn="{StaticResource {x:Type controls:IconButton}}">
                                                                        <Setter Property="Command" Value="{Binding EndEditPenaltyCmd}"/>
                                                                        <Setter Property="IconFill" Value="Green"/>
                                                                        <!--<Setter Property="IconContent" Value="{StaticResource checkBold}"/>-->
                                                                        <Setter Property="IconContent">
                                                                            <Setter.Value>
                                                                                <Viewbox>
                                                                                    <ContentControl Content="{DynamicResource checkBold}"/>
                                                                                </Viewbox>
                                                                            </Setter.Value>
                                                                        </Setter>
                                                                        <Style.Triggers>
                                                                            <DataTrigger Binding="{Binding IsPenaltyEdit}" Value="False">
                                                                                <Setter Property="Command" Value="{Binding StartEditPenaltyCmd}"/>
                                                                                <Setter Property="IconFill" Value="Black" />
                                                                                <!--<Setter Property="IconContent" Value="{StaticResource pencilOutline}"/>-->
                                                                                <Setter Property="IconContent">
                                                                                    <Setter.Value>
                                                                                        <Viewbox>
                                                                                            <ContentControl Content="{DynamicResource pencilOutline}"/>
                                                                                        </Viewbox>
                                                                                    </Setter.Value>
                                                                                </Setter>
                                                                            </DataTrigger>
                                                                            <DataTrigger Binding="{Binding AddPenalty}" Value="{x:Null}">
                                                                                <Setter Property="Command" Value="{Binding AddPenaltyCmd}"/>
                                                                                <Setter Property="IconFill" Value="Black"/>
                                                                                <!--<Setter Property="IconContent" Value="{StaticResource PencilPlusOutline}"/>-->
                                                                                <Setter Property="IconContent">
                                                                                    <Setter.Value>
                                                                                        <Viewbox>
                                                                                            <ContentControl Content="{DynamicResource PencilPlusOutline}"/>
                                                                                        </Viewbox>
                                                                                    </Setter.Value>
                                                                                </Setter>
                                                                            </DataTrigger>
                                                                        </Style.Triggers>
                                                                    </Style>
                                                                </controls:IconButton.Style>
                                                            </controls:IconButton>
                                                            <controls:IconButton IconMargin="-2,-4,0,0" Width="28" Height="25" Padding="5"
                                                    Command="{Binding DeletePenaltyCmd}"
                                                    IconContent="{DynamicResource closeThick}">
                                                                <controls:IconButton.Style>
                                                                    <Style TargetType="controls:IconButton" BasedOn="{StaticResource {x:Type controls:IconButton}}">
                                                                        <Setter Property="Visibility" Value="Visible"/>
                                                                        <Setter Property="IconFill" Value="Red"/>
                                                                        <Style.Triggers>
                                                                            <DataTrigger Binding="{Binding AddPenalty}" Value="{x:Null}">
                                                                                <Setter Property="Visibility" Value="Collapsed"/>
                                                                            </DataTrigger>
                                                                        </Style.Triggers>
                                                                    </Style>
                                                                </controls:IconButton.Style>
                                                            </controls:IconButton>
                                                        </StackPanel>
                                                    </DataTemplate>
                                                </DataGridTemplateColumn.CellTemplate>
                                            </DataGridTemplateColumn>
                                        </DataGrid.Columns>
                                    </DataGrid>
                                    <DataTemplate.Triggers>
                                        <DataTrigger Binding="{Binding FinalResults.Count}" Value="0">
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                        </DataTrigger>
                                    </DataTemplate.Triggers>
                                </DataTemplate>
                            </DataGrid.RowDetailsTemplate>
                            <DataGrid.ColumnHeaderStyle>
                                <Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource DataGridColumnHeaderStyle}"/>
                            </DataGrid.ColumnHeaderStyle>
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="Pos." Binding="{Binding FinalPosition, StringFormat={}{0}.}" IsReadOnly="True" Width="45" 
                                                    MinWidth="45" TextElement.FontWeight="Bold" x:Name="TeamPositionColumn" SortDirection="Ascending">
                                    <DataGridTextColumn.ElementStyle>
                                        <Style TargetType="TextBlock" BasedOn="{StaticResource TextColumnElementStyle}">
                                            <Setter Property="TextAlignment" Value="Center"/>
                                        </Style>
                                    </DataGridTextColumn.ElementStyle>
                                </DataGridTextColumn>
                                <DataGridTemplateColumn Header="Team" IsReadOnly="True" Width="15*"
                                                        MaxWidth="550" MinWidth="150" x:Name="TeamTeamNameColumn"
                                                        SortMemberPath="Team.Name">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <StackPanel Orientation="Horizontal">
                                                <controls:IconToggleButton IconMargin="2" x:Name="ShowDetailToggleButton" BorderBrush="Gray" 
                                                                           BorderThickness="1" Padding="0" Margin="0,0,5,0" VerticalAlignment="Center"
                                                                           Click="ShowDetailToggleButton_Click">
                                                    <controls:IconToggleButton.Style>
                                                        <Style TargetType="controls:IconToggleButton" BasedOn="{StaticResource {x:Type controls:IconToggleButton}}">
                                                            <Setter Property="IconContent">
                                                                <Setter.Value>
                                                                    <fa:ImageAwesome Icon="Plus" Width="8" Height="8"/>
                                                                </Setter.Value>
                                                            </Setter>
                                                            <Style.Triggers>
                                                                <Trigger Property="IsChecked" Value="True">
                                                                    <Setter Property="IconContent">
                                                                        <Setter.Value>
                                                                            <fa:ImageAwesome Icon="Minus" Width="8" Height="8"/>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </Trigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </controls:IconToggleButton.Style>
                                                </controls:IconToggleButton>
                                                <TextBlock Text="{Binding Team.Name}" Foreground="{Binding Team.TeamColor}"
                                                           FontWeight="Bold"/>
                                            </StackPanel>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                                <DataGridTextColumn Header="Fast Lap" IsReadOnly="True" Width="100" MinWidth="90" x:Name="TeamFastLapColumn"
                                                    SortMemberPath="FastestLapTime">
                                    <DataGridTextColumn.ElementStyle>
                                        <Style TargetType="TextBlock" BasedOn="{StaticResource TextColumnElementStyle}">
                                            <Setter Property="TextAlignment" Value="Center"/>
                                        </Style>
                                    </DataGridTextColumn.ElementStyle>
                                    <DataGridTextColumn.Binding>
                                        <MultiBinding StringFormat="{}{0:00}:{1:00},{2:000}">
                                            <Binding Path="FastestLapTime.Minutes"/>
                                            <Binding Path="FastestLapTime.Seconds"/>
                                            <Binding Path="FastestLapTime.Milliseconds"/>
                                        </MultiBinding>
                                    </DataGridTextColumn.Binding>
                                </DataGridTextColumn>
                                <DataGridTextColumn Header="Avg. Lap" IsReadOnly="True" Width="100" MinWidth="90"
                                                    SortMemberPath="AvgLapTime">
                                    <DataGridTextColumn.ElementStyle>
                                        <Style TargetType="TextBlock" BasedOn="{StaticResource TextColumnElementStyle}">
                                            <Setter Property="TextAlignment" Value="Center"/>
                                        </Style>
                                    </DataGridTextColumn.ElementStyle>
                                    <DataGridTextColumn.Binding>
                                        <MultiBinding StringFormat="{}{0:00}:{1:00},{2:000}">
                                            <Binding Path="AvgLapTime.Minutes"/>
                                            <Binding Path="AvgLapTime.Seconds"/>
                                            <Binding Path="AvgLapTime.Milliseconds"/>
                                        </MultiBinding>
                                    </DataGridTextColumn.Binding>
                                </DataGridTextColumn>
                                <DataGridTemplateColumn Header="Interval" IsReadOnly="True" Width="100" MinWidth="90"
                                                        SortMemberPath="Interval">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="---" HorizontalAlignment="Center"/>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                                <DataGridTextColumn Binding="{Binding RacePoints}" IsReadOnly="True" Width="90" MinWidth="50">
                                    <DataGridTextColumn.ElementStyle>
                                        <Style TargetType="TextBlock" BasedOn="{StaticResource TextColumnElementStyle}">
                                            <Setter Property="TextAlignment" Value="Center"/>
                                        </Style>
                                    </DataGridTextColumn.ElementStyle>
                                    <DataGridTextColumn.Header>
                                        <TextBlock Text="Race Pts." TextWrapping="Wrap"/>
                                    </DataGridTextColumn.Header>
                                </DataGridTextColumn>
                                <DataGridTextColumn Binding="{Binding BonusPoints, StringFormat={}{0:+#;-#;-}}" IsReadOnly="True" Width="90" MinWidth="58"
                                                    SortMemberPath="BonusPoints">
                                    <DataGridTextColumn.ElementStyle>
                                        <Style TargetType="TextBlock" BasedOn="{StaticResource TextColumnElementStyle}">
                                            <Setter Property="TextAlignment" Value="Center"/>
                                        </Style>
                                    </DataGridTextColumn.ElementStyle>
                                    <DataGridTextColumn.Header>
                                        <TextBlock Text="Bonus Pts." TextWrapping="Wrap"/>
                                    </DataGridTextColumn.Header>
                                </DataGridTextColumn>
                                <DataGridTextColumn Binding="{Binding PenaltyPoints, StringFormat={}{0:-#;+#;-}}" IsReadOnly="True" 
                                                    Width="90" MinWidth="50" SortMemberPath="PenaltyPoints">
                                    <DataGridTextColumn.ElementStyle>
                                        <Style TargetType="TextBlock" BasedOn="{StaticResource TextColumnElementStyle}">
                                            <Setter Property="TextAlignment" Value="Center"/>
                                        </Style>
                                    </DataGridTextColumn.ElementStyle>
                                    <DataGridTextColumn.Header>
                                        <TextBlock Text="Pen. Pts." TextWrapping="WrapWithOverflow"/>
                                    </DataGridTextColumn.Header>
                                    <DataGridTextColumn.CellStyle>
                                        <Style TargetType="DataGridCell" BasedOn="{StaticResource ResultsGridCellStyle}">
                                            <Setter Property="Foreground" Value="Red"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding PenaltyPoints}" Value="0">
                                                    <Setter Property="Foreground" Value="Black"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </DataGridTextColumn.CellStyle>
                                </DataGridTextColumn>
                                <DataGridTextColumn Binding="{Binding TotalPoints}" IsReadOnly="True" Width="90" MinWidth="50">
                                    <DataGridTextColumn.ElementStyle>
                                        <Style TargetType="TextBlock" BasedOn="{StaticResource TextColumnElementStyle}">
                                            <Setter Property="TextAlignment" Value="Center"/>
                                        </Style>
                                    </DataGridTextColumn.ElementStyle>
                                    <DataGridTextColumn.Header>
                                        <TextBlock Text="Total Pts." TextWrapping="Wrap"/>
                                    </DataGridTextColumn.Header>
                                </DataGridTextColumn>
                                <DataGridTemplateColumn Header="Add Penalty" Width="105" MinWidth="105">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="---" HorizontalAlignment="Center"/>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                                <!--<DataGridTemplateColumn Width="30" MinWidth="30">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <controls:IconButton Click="DeleteRowButton_Click" Tag="{Binding}"
                                                                 Width="28" Height="25" Margin="-5,0,0,0" Padding="2"
                                                                 IconFill="{StaticResource ThemeColor_Back5}">
                                                <controls:IconButton.IconContent>
                                                    <Viewbox>
                                                        <ContentControl Content="{StaticResource delete}"/>
                                                    </Viewbox>
                                                </controls:IconButton.IconContent>
                                            </controls:IconButton>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>-->
                            </DataGrid.Columns>
                        </DataGrid>
                    </DataTemplate>
                    <DataTemplate DataType="{x:Type vmodel:ScoredResultViewModel}">
                        <DataGrid ItemsSource="{Binding FinalResults}" AutoGenerateColumns="False" VerticalAlignment="Stretch" 
                                  AlternationCount="2" AlternatingRowBackground="#F0F0F0"
                                  ScrollViewer.CanContentScroll="False"
                                  TextElement.FontSize="{StaticResource Global.FontSizeSmall}" 
                                  PreviewMouseWheel="DataGrid_PreviewMouseWheel"
                                  RowHeight="30" CanUserAddRows="False" CanUserDeleteRows="False"
                                  MaxHeight="4000" MaxWidth="4000"
                                  SelectionUnit="FullRow" SelectionMode="Single"
                                  Margin="5" Style="{StaticResource DataGridStyle}">
                            <DataGrid.CellStyle>
                                <Style TargetType="DataGridCell" BasedOn="{StaticResource ResultsGridCellStyle}"/>
                            </DataGrid.CellStyle>
                            <DataGrid.RowHeaderStyle>
                                <Style TargetType="DataGridRowHeader">
                                    <Setter Property="Padding" Value="0"/>
                                    <Setter Property="Width" Value="0"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type DataGridRowHeader}">
                                                <Border Padding="{TemplateBinding Padding}" BorderBrush="{TemplateBinding BorderBrush}" 
                                                        BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" 
                                                        SnapsToDevicePixels="True">
                                                    <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                </Border>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </DataGrid.RowHeaderStyle>
                            <DataGrid.ColumnHeaderStyle>
                                <Style TargetType="DataGridColumnHeader">
                                    <Setter Property="Padding" Value="5"/>
                                    <Setter Property="TextElement.FontWeight" Value="Bold"/>
                                    <Setter Property="TextElement.FontSize" Value="{StaticResource Global.FontSizeMedium}"/>
                                    <Setter Property="Background" Value="{StaticResource ThemeColor_Back0}"/>
                                    <Setter Property="BorderBrush" Value="Black"/>
                                    <Setter Property="BorderThickness" Value="0,0,1,2"/>
                                    <Setter Property="SnapsToDevicePixels" Value="True"/>
                                    <Setter Property="Height" Value="Auto"/>
                                    <Setter Property="TextBlock.TextAlignment" Value="Center"/>
                                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                    <!--<Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                                                <Border Padding="{TemplateBinding Padding}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                                                    <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
                                                </Border>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>-->
                                </Style>
                            </DataGrid.ColumnHeaderStyle>
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="Pos." Binding="{Binding FinalPosition, StringFormat={}{0}.}" IsReadOnly="True" Width="45" 
                                                    MinWidth="45" TextElement.FontWeight="Bold" SortMemberPath="FinalPosition" SortDirection="Ascending">
                                    <DataGridTextColumn.ElementStyle>
                                        <Style TargetType="TextBlock" BasedOn="{StaticResource TextColumnElementStyle}">
                                            <Setter Property="TextAlignment" Value="Center"/>
                                        </Style>
                                    </DataGridTextColumn.ElementStyle>
                                </DataGridTextColumn>
                                <DataGridTextColumn Header="Chg." Binding="{Binding PositionChange, StringFormat={}{0:+#;-#;' - '}}" 
                                                                IsReadOnly="True" Width="45" MinWidth="45" SortMemberPath="PositionChange">
                                    <DataGridTextColumn.ElementStyle>
                                        <Style TargetType="TextBlock" BasedOn="{StaticResource TextColumnElementStyle}">
                                            <Setter Property="TextAlignment" Value="Center"/>
                                            <Setter Property="FontWeight" Value="Normal"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding PositionChange, 
                                                    Converter={StaticResource CompareNumericalConverter}, ConverterParameter=0}" Value="1">
                                                    <Setter Property="Foreground" Value="Green"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding PositionChange, 
                                                    Converter={StaticResource CompareNumericalConverter}, ConverterParameter=0}" Value="-1">
                                                    <Setter Property="Foreground" Value="Red"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding MostPositionChange}" Value="True">
                                                    <Setter Property="FontWeight" Value="Bold"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </DataGridTextColumn.ElementStyle>
                                </DataGridTextColumn>
                                <DataGridTextColumn Header="Start" Binding="{Binding StartPosition, StringFormat={}{0}.}" IsReadOnly="True" Width="50" MinWidth="50"
                                                    SortMemberPath="StartPosition">
                                    <DataGridTextColumn.ElementStyle>
                                        <Style TargetType="TextBlock" BasedOn="{StaticResource TextColumnElementStyle}">
                                            <Setter Property="TextAlignment" Value="Center"/>
                                        </Style>
                                    </DataGridTextColumn.ElementStyle>
                                </DataGridTextColumn>
                                <DataGridTemplateColumn Header="Name" IsReadOnly="True" Width="*" MinWidth="150"
                                                    SortMemberPath="Member.FullName">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                                <TextBlock Text="{Binding Member.FullName}" FontWeight="Bold" />
                                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Top">
                                                    <Border CornerRadius="8" BorderThickness="1" BorderBrush="DarkGray" Width="16" Height="16" 
                                                            Background="LightGoldenrodYellow">
                                                        <TextBlock Text="H" ToolTip="Hard Charger" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                        <Border.Style>
                                                            <Style TargetType="Border">
                                                                <Setter Property="Visibility" Value="Collapsed"/>
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding HardCharger}" Value="True">
                                                                        <Setter Property="Visibility" Value="Visible"/>
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </Border.Style>
                                                    </Border>
                                                    <Border CornerRadius="8" BorderThickness="1" BorderBrush="DarkGray" Width="16" Height="16"
                                                            Background="PaleGreen">
                                                        <TextBlock Text="C" ToolTip="Cleanest Driver" HorizontalAlignment="Center" VerticalAlignment="Center">
                                                            <TextBlock.Style>
                                                                <Style TargetType="TextBlock">
                                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                                    <Style.Triggers>
                                                                        <DataTrigger Binding="{Binding CleanestDriver}" Value="True">
                                                                            <Setter Property="Visibility" Value="Visible"/>
                                                                        </DataTrigger>
                                                                    </Style.Triggers>
                                                                </Style>
                                                            </TextBlock.Style>
                                                        </TextBlock>
                                                        <Border.Style>
                                                            <Style TargetType="Border">
                                                                <Setter Property="Visibility" Value="Collapsed"/>
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding CleanestDriver}" Value="True">
                                                                        <Setter Property="Visibility" Value="Visible"/>
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </Border.Style>
                                                    </Border>
                                                    <StackPanel.RenderTransform>
                                                        <TranslateTransform X="4" Y="-4"/>
                                                    </StackPanel.RenderTransform>
                                                </StackPanel>
                                            </Grid>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                    <DataGridTemplateColumn.CellStyle>
                                        <Style TargetType="DataGridCell" BasedOn="{StaticResource ResultsGridCellStyle}">
                                            <Setter Property="ToolTip">
                                                <Setter.Value>
                                                    <ToolTip>
                                                        <Grid>
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="Auto"/>
                                                                <ColumnDefinition Width="Auto"/>
                                                            </Grid.ColumnDefinitions>
                                                            <Grid.RowDefinitions>
                                                                <RowDefinition Height="Auto"/>
                                                                <RowDefinition Height="Auto"/>
                                                                <RowDefinition Height="Auto"/>
                                                                <RowDefinition Height="Auto"/>
                                                                <RowDefinition Height="Auto"/>
                                                                <RowDefinition Height="Auto"/>
                                                            </Grid.RowDefinitions>
                                                            <TextBlock Text="iRacing id: " Grid.Row="0" Grid.Column="0"/>
                                                            <TextBlock Text="{Binding Member.IRacingId, FallbackValue=''}" Grid.Row="0" Grid.Column="1"/>

                                                            <TextBlock Text="iRating Start: " Grid.Row="1" Grid.Column="0"/>
                                                            <TextBlock Text="{Binding OldIRating, FallbackValue=0}" Grid.Row="1" Grid.Column="1"/>

                                                            <TextBlock Text="iRating End: " Grid.Row="2" Grid.Column="0"/>
                                                            <TextBlock Text="{Binding NewIRating, FallbackValue=0}" Grid.Row="2" Grid.Column="1"/>

                                                            <TextBlock Text="Safety Rating: " Grid.Row="3" Grid.Column="0"/>
                                                            <TextBlock Text="{Binding NewSafetyRating, FallbackValue=0}" Grid.Row="3" Grid.Column="1"/>

                                                            <TextBlock Text="Hard Charger: " Grid.Row="4" Grid.Column="0"/>
                                                            <TextBlock Text="{Binding HardCharger}" Grid.Row="4" Grid.Column="1"/>

                                                            <TextBlock Text="Cleanest Driver: " Grid.Row="5" Grid.Column="0"/>
                                                            <TextBlock Text="{Binding CleanestDriver}" Grid.Row="5" Grid.Column="1"/>
                                                        </Grid>
                                                    </ToolTip>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </DataGridTemplateColumn.CellStyle>
                                </DataGridTemplateColumn>
                                <!--<DataGridTextColumn Header="Team" Binding="{Binding Member.Team.TeamColor}" IsReadOnly="True" Width="*" MinWidth="150"
                                                                ElementStyle="{StaticResource TextColumnElementStyle}" Foreground="{Binding Member.Team.TeamColor}"/>-->
                                <DataGridTemplateColumn Header="Team" IsReadOnly="True" Width="15*"
                                                        MaxWidth="450" MinWidth="150"
                                                        SortMemberPath="Member.Team.Name">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Team.Name}" Foreground="{Binding Team.TeamColor}" 
                                                       FontWeight="DemiBold"/>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                                <DataGridTextColumn Header="Qualy Lap" IsReadOnly="True" Width="80" MinWidth="80" SortMemberPath="QualifyingTime">
                                    <DataGridTextColumn.ElementStyle>
                                        <Style TargetType="TextBlock" BasedOn="{StaticResource TextColumnElementStyle}">
                                            <Setter Property="TextAlignment" Value="Center"/>
                                            <Setter Property="Text">
                                                <Setter.Value>
                                                    <MultiBinding StringFormat="{}{0:00}:{1:00},{2:000}">
                                                        <Binding Path="QualifyingTime.Minutes"/>
                                                        <Binding Path="QualifyingTime.Seconds"/>
                                                        <Binding Path="QualifyingTime.Milliseconds"/>
                                                    </MultiBinding>
                                                </Setter.Value>
                                            </Setter>
                                            <Style.Triggers>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding QualifyingTime.Minutes}" Value="0"/>
                                                        <Condition Binding="{Binding QualifyingTime.Seconds}" Value="0"/>
                                                        <Condition Binding="{Binding QualifyingTime.Milliseconds}" Value="0"/>
                                                    </MultiDataTrigger.Conditions>
                                                    <Setter Property="Text" Value="..."/>
                                                </MultiDataTrigger>
                                                <DataTrigger Binding="{Binding HasPoleLap}" Value="True">
                                                    <Setter Property="FontWeight" Value="Bold"/>
                                                    <Setter Property="TextDecorations" Value="Underline"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </DataGridTextColumn.ElementStyle>
                                    <!--<DataGridTextColumn.Binding>
                                        <MultiBinding StringFormat="{}{0:00}:{1:00},{2:000}">
                                            <Binding Path="QualifyingTime.Minutes"/>
                                            <Binding Path="QualifyingTime.Seconds"/>
                                            <Binding Path="QualifyingTime.Milliseconds"/>
                                        </MultiBinding>
                                    </DataGridTextColumn.Binding>-->
                                </DataGridTextColumn>
                                <DataGridTextColumn Header="Fast Lap" IsReadOnly="True" Width="80" MinWidth="80" SortMemberPath="FastestLapTime">
                                    <DataGridTextColumn.ElementStyle>
                                        <Style TargetType="TextBlock" BasedOn="{StaticResource TextColumnElementStyle}">
                                            <Setter Property="TextAlignment" Value="Center"/>
                                            <Setter Property="Text">
                                                <Setter.Value>
                                                    <MultiBinding StringFormat="{}{0:00}:{1:00},{2:000}">
                                                        <Binding Path="FastestLapTime.Minutes"/>
                                                        <Binding Path="FastestLapTime.Seconds"/>
                                                        <Binding Path="FastestLapTime.Milliseconds"/>
                                                    </MultiBinding>
                                                </Setter.Value>
                                            </Setter>
                                            <Style.Triggers>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding FastestLapTime.Minutes}" Value="0"/>
                                                        <Condition Binding="{Binding FastestLapTime.Seconds}" Value="0"/>
                                                        <Condition Binding="{Binding FastestLapTime.Milliseconds}" Value="0"/>
                                                    </MultiDataTrigger.Conditions>
                                                    <Setter Property="Text" Value="..."/>
                                                </MultiDataTrigger>
                                                <DataTrigger Binding="{Binding HasFastestLap}" Value="True">
                                                    <Setter Property="FontWeight" Value="Bold"/>
                                                    <Setter Property="TextDecorations" Value="Underline"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </DataGridTextColumn.ElementStyle>
                                </DataGridTextColumn>
                                <DataGridTextColumn Header="Avg. Lap" IsReadOnly="True" Width="80" MinWidth="80" SortMemberPath="AvgLapTime">
                                    <DataGridTextColumn.ElementStyle>
                                        <Style TargetType="TextBlock" BasedOn="{StaticResource TextColumnElementStyle}">
                                            <Setter Property="TextAlignment" Value="Center"/>
                                            <Setter Property="Text">
                                                <Setter.Value>
                                                    <MultiBinding StringFormat="{}{0:00}:{1:00},{2:000}">
                                                        <Binding Path="AvgLapTime.Minutes"/>
                                                        <Binding Path="AvgLapTime.Seconds"/>
                                                        <Binding Path="AvgLapTime.Milliseconds"/>
                                                    </MultiBinding>
                                                </Setter.Value>
                                            </Setter>
                                            <Style.Triggers>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding AvgLapTime.Minutes}" Value="0"/>
                                                        <Condition Binding="{Binding AvgLapTime.Seconds}" Value="0"/>
                                                        <Condition Binding="{Binding AvgLapTime.Milliseconds}" Value="0"/>
                                                    </MultiDataTrigger.Conditions>
                                                    <Setter Property="Text" Value="..."/>
                                                </MultiDataTrigger>
                                                <DataTrigger Binding="{Binding HasFastestAvgLap}" Value="True">
                                                    <Setter Property="FontWeight" Value="Bold"/>
                                                    <Setter Property="TextDecorations" Value="Underline"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </DataGridTextColumn.ElementStyle>
                                </DataGridTextColumn>
                                <DataGridTextColumn Header="Interval" Width="80" MinWidth="80" SortMemberPath="Interval">
                                    <DataGridTextColumn.ElementStyle>
                                        <Style TargetType="TextBlock" BasedOn="{StaticResource TextColumnElementStyle}">
                                            <Setter Property="TextAlignment" Value="Center"/>
                                            <Setter Property="Text" Value="{Binding Interval, Converter={StaticResource LapIntervalStringConverter}}"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Interval.Time}" Value="0">
                                                    <Setter Property="Text" Value="---"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </DataGridTextColumn.ElementStyle>
                                </DataGridTextColumn>
                                <DataGridTextColumn IsReadOnly="True" Binding="{Binding LeadLaps}" Width="60" MinWidth="50">
                                    <DataGridTextColumn.ElementStyle>
                                        <Style TargetType="TextBlock" BasedOn="{StaticResource TextColumnElementStyle}">
                                            <Setter Property="TextAlignment" Value="Center"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding MostLeadLaps}" Value="True">
                                                    <Setter Property="FontWeight" Value="Bold"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </DataGridTextColumn.ElementStyle>
                                    <DataGridTextColumn.Header>
                                        <TextBlock Text="Lead Laps" TextWrapping="Wrap"/>
                                    </DataGridTextColumn.Header>
                                </DataGridTextColumn>
                                <DataGridTextColumn IsReadOnly="True" Binding="{Binding CompletedLaps}" Width="60" MinWidth="55">
                                    <DataGridTextColumn.ElementStyle>
                                        <Style TargetType="TextBlock" BasedOn="{StaticResource TextColumnElementStyle}">
                                            <Setter Property="TextAlignment" Value="Center"/>
                                        </Style>
                                    </DataGridTextColumn.ElementStyle>
                                    <DataGridTextColumn.Header>
                                        <TextBlock Text="Compl. Laps" TextWrapping="WrapWithOverflow"/>
                                    </DataGridTextColumn.Header>
                                </DataGridTextColumn>
                                <DataGridTextColumn Binding="{Binding RacePoints, StringFormat={}{0:#;-#;-}}" IsReadOnly="True" Width="60" MinWidth="50">
                                    <DataGridTextColumn.ElementStyle>
                                        <Style TargetType="TextBlock" BasedOn="{StaticResource TextColumnElementStyle}">
                                            <Setter Property="TextAlignment" Value="Center"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding MostRacePoints}" Value="True">
                                                    <Setter Property="FontWeight" Value="Bold"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </DataGridTextColumn.ElementStyle>
                                    <DataGridTextColumn.Header>
                                        <TextBlock Text="Race Pts." TextWrapping="Wrap"/>
                                    </DataGridTextColumn.Header>
                                </DataGridTextColumn>
                                <DataGridTextColumn Binding="{Binding BonusPoints, StringFormat={}{0:+#;-#;-}}" IsReadOnly="True" Width="58" MinWidth="58">
                                    <DataGridTextColumn.ElementStyle>
                                        <Style TargetType="TextBlock" BasedOn="{StaticResource TextColumnElementStyle}">
                                            <Setter Property="TextAlignment" Value="Center"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding MostBonusPoints}" Value="True">
                                                    <Setter Property="FontWeight" Value="Bold"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </DataGridTextColumn.ElementStyle>
                                    <DataGridTextColumn.Header>
                                        <TextBlock Text="Bonus Pts." TextWrapping="Wrap"/>
                                    </DataGridTextColumn.Header>
                                </DataGridTextColumn>
                                <DataGridTextColumn IsReadOnly="True" Width="55" MinWidth="55" SortMemberPath="PenaltyPoints">
                                    <DataGridTextColumn.Binding>
                                        <MultiBinding StringFormat="{}-{0} {1:[#];[#];''}">
                                            <Binding Path="PenaltyString"/>
                                            <Binding Path="ReviewPenalties.Count"/>
                                        </MultiBinding>
                                    </DataGridTextColumn.Binding>
                                    <DataGridTextColumn.ElementStyle>
                                        <Style TargetType="TextBlock" BasedOn="{StaticResource TextColumnElementStyle}">
                                            <Setter Property="TextAlignment" Value="Center"/>
                                        </Style>
                                    </DataGridTextColumn.ElementStyle>
                                    <DataGridTextColumn.Header>
                                        <TextBlock Text="Pen." TextWrapping="WrapWithOverflow"/>
                                    </DataGridTextColumn.Header>
                                    <DataGridTextColumn.CellStyle>
                                        <Style TargetType="DataGridCell" BasedOn="{StaticResource ResultsGridCellStyle}">
                                            <Setter Property="Foreground" Value="Red"/>
                                            <Setter Property="ToolTip">
                                                <Setter.Value>
                                                    <ToolTip Placement="Relative" VerticalOffset="30">
                                                        <ItemsControl ItemsSource="{Binding ReviewPenalties}">
                                                            <ItemsControl.ItemsPanel>
                                                                <ItemsPanelTemplate>
                                                                    <StackPanel Orientation="Vertical"/>
                                                                </ItemsPanelTemplate>
                                                            </ItemsControl.ItemsPanel>
                                                            <ItemsControl.ItemTemplate>
                                                                <DataTemplate DataType="{x:Type vmodel:ReviewPenaltyViewModel}">
                                                                    <TextBlock>
                                                                        <TextBlock.Style>
                                                                            <Style TargetType="TextBlock">
                                                                                <Setter Property="Text">
                                                                                    <Setter.Value>
                                                                                        <MultiBinding StringFormat="{}#{0} | {1}: -{2} pts.">
                                                                                            <Binding Path="IncidentNr"/>
                                                                                            <Binding Path="VoteCategory.Text" FallbackValue="(category not found)"/>
                                                                                            <Binding Path="PenaltyPoints"/>
                                                                                        </MultiBinding>
                                                                                    </Setter.Value>
                                                                                </Setter>
                                                                            </Style>
                                                                        </TextBlock.Style>
                                                                    </TextBlock>
                                                                </DataTemplate>
                                                            </ItemsControl.ItemTemplate>
                                                        </ItemsControl>
                                                        <ToolTip.Style>
                                                            <Style TargetType="ToolTip">
                                                                <Setter Property="Visibility" Value="Visible"/>
                                                                <Setter Property="StaysOpen" Value="True"/>
                                                                <Setter Property="Background" Value="{StaticResource ThemeColor_Yellow}"/>
                                                                <Setter Property="ToolTipService.InitialShowDelay" Value="3000"/>
                                                                <Setter Property="ToolTipService.BetweenShowDelay" Value="2000"/>
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding ReviewPenalties.Count}" Value="0">
                                                                        <Setter Property="Visibility" Value="Collapsed"/>
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </ToolTip.Style>
                                                    </ToolTip>
                                                </Setter.Value>
                                            </Setter>
                                            <Style.Triggers>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding PenaltyPoints}" Value="0"/>
                                                        <Condition Binding="{Binding PenaltyTime.TotalSeconds}" Value="0"/>
                                                    </MultiDataTrigger.Conditions>
                                                    <MultiDataTrigger.Setters>
                                                        <Setter Property="Foreground" Value="Black"/>
                                                    </MultiDataTrigger.Setters>
                                                </MultiDataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </DataGridTextColumn.CellStyle>
                                </DataGridTextColumn>
                                <DataGridTextColumn Binding="{Binding Incidents}" IsReadOnly="True" Width="50" MinWidth="50"
                                                    Header="Incs.">
                                    <DataGridTextColumn.ElementStyle>
                                        <Style TargetType="TextBlock" BasedOn="{StaticResource TextColumnElementStyle}">
                                            <Setter Property="TextAlignment" Value="Center"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding MostIncidents}" Value="True">
                                                    <Setter Property="FontWeight" Value="Bold"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </DataGridTextColumn.ElementStyle>
                                </DataGridTextColumn>
                                <DataGridTextColumn Binding="{Binding TotalPoints}" IsReadOnly="True" Width="50" MinWidth="50">
                                    <DataGridTextColumn.ElementStyle>
                                        <Style TargetType="TextBlock" BasedOn="{StaticResource TextColumnElementStyle}">
                                            <Setter Property="TextAlignment" Value="Center"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding MostTotalPoints}" Value="True">
                                                    <Setter Property="FontWeight" Value="Bold"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </DataGridTextColumn.ElementStyle>
                                    <DataGridTextColumn.Header>
                                        <TextBlock Text="Total Pts." TextWrapping="Wrap"/>
                                    </DataGridTextColumn.Header>
                                </DataGridTextColumn>
                                <DataGridTemplateColumn Header="Add Penalty" Width="105" MinWidth="105" Visibility="Visible">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <StackPanel Orientation="Horizontal">
                                                <TextBox Text="{Binding AddPenalty.Penalty, UpdateSourceTrigger=LostFocus}" MinWidth="40" Padding="2,5">
                                                    <TextBox.Style>
                                                        <Style TargetType="TextBox">
                                                            <Setter Property="IsReadOnly" Value="True"/>
                                                            <Setter Property="IsEnabled" Value="False"/>
                                                            <Setter Property="Visibility" Value="Visible"/>
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding IsPenaltyEdit}" Value="True">
                                                                    <Setter Property="IsReadOnly" Value="False"/>
                                                                    <Setter Property="IsEnabled" Value="True"/>
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding AddPenalty}" Value="{x:Null}">
                                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBox.Style>
                                                </TextBox>
                                                <!--<ComboBox SelectedValue="{Binding AddPenalty.PenaltyPoints, UpdateSourceTrigger=PropertyChanged}" 
                                                          DisplayMemberPath="" SelectedValuePath="Content" Width="40" VerticalContentAlignment="Center"
                                                          Margin="0" Height="25" IsEditable="True">
                                                    <ComboBox.Style>
                                                        <Style TargetType="ComboBox">
                                                            <Setter Property="IsReadOnly" Value="True"/>
                                                            <Setter Property="IsEnabled" Value="False"/>
                                                            <Setter Property="Visibility" Value="Visible"/>
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding IsPenaltyEdit}" Value="True">
                                                                    <Setter Property="IsReadOnly" Value="False"/>
                                                                    <Setter Property="IsEnabled" Value="True"/>
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding AddPenalty}" Value="{x:Null}">
                                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </ComboBox.Style>
                                                    <ComboBox.Items>
                                                        <ComboBoxItem>0</ComboBoxItem>
                                                        <ComboBoxItem>1</ComboBoxItem>
                                                        <ComboBoxItem>2</ComboBoxItem>
                                                        <ComboBoxItem>3</ComboBoxItem>
                                                        <ComboBoxItem>4</ComboBoxItem>
                                                        <ComboBoxItem>5</ComboBoxItem>
                                                        <ComboBoxItem>6</ComboBoxItem>
                                                        <ComboBoxItem>7</ComboBoxItem>
                                                        <ComboBoxItem>8</ComboBoxItem>
                                                        <ComboBoxItem>9</ComboBoxItem>
                                                        <ComboBoxItem>10</ComboBoxItem>
                                                    </ComboBox.Items>
                                                </ComboBox>-->
                                                <controls:IconButton IconMargin="-2,-4,0,0" Width="28" Height="25" Padding="5">
                                                    <controls:IconButton.Style>
                                                        <Style TargetType="controls:IconButton" BasedOn="{StaticResource {x:Type controls:IconButton}}">
                                                            <Setter Property="Command" Value="{Binding EndEditPenaltyCmd}"/>
                                                            <Setter Property="IconFill" Value="Green"/>
                                                            <!--<Setter Property="IconContent" Value="{StaticResource checkBold}"/>-->
                                                            <Setter Property="IconContent">
                                                                <Setter.Value>
                                                                    <Viewbox>
                                                                        <ContentControl Content="{DynamicResource checkBold}"/>
                                                                    </Viewbox>
                                                                </Setter.Value>
                                                            </Setter>
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding IsPenaltyEdit}" Value="False">
                                                                    <Setter Property="Command" Value="{Binding StartEditPenaltyCmd}"/>
                                                                    <Setter Property="IconFill" Value="Black" />
                                                                    <!--<Setter Property="IconContent" Value="{StaticResource pencilOutline}"/>-->
                                                                    <Setter Property="IconContent">
                                                                        <Setter.Value>
                                                                            <Viewbox>
                                                                                <ContentControl Content="{DynamicResource pencilOutline}"/>
                                                                            </Viewbox>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding AddPenalty}" Value="{x:Null}">
                                                                    <Setter Property="Command" Value="{Binding AddPenaltyCmd}"/>
                                                                    <Setter Property="IconFill" Value="Black"/>
                                                                    <!--<Setter Property="IconContent" Value="{StaticResource PencilPlusOutline}"/>-->
                                                                    <Setter Property="IconContent">
                                                                        <Setter.Value>
                                                                            <Viewbox>
                                                                                <ContentControl Content="{DynamicResource PencilPlusOutline}"/>
                                                                            </Viewbox>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </controls:IconButton.Style>
                                                </controls:IconButton>
                                                <controls:IconButton IconMargin="-2,-4,0,0" Width="28" Height="25" Padding="5"
                                                    Command="{Binding DeletePenaltyCmd}"
                                                    IconContent="{DynamicResource closeThick}">
                                                    <controls:IconButton.Style>
                                                        <Style TargetType="controls:IconButton" BasedOn="{StaticResource {x:Type controls:IconButton}}">
                                                            <Setter Property="Visibility" Value="Visible"/>
                                                            <Setter Property="IconFill" Value="Red"/>
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding AddPenalty}" Value="{x:Null}">
                                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </controls:IconButton.Style>
                                                </controls:IconButton>
                                            </StackPanel>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                                <DataGridTemplateColumn Width="55" MinWidth="55">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <StackPanel Orientation="Horizontal">
                                                <controls:IconButton Command="{Binding ToggleDSQCmd}"
                                                                 Width="28" Height="25" Margin="-2,0,-2,0" Padding="2,2,4,2"
                                                                 IconMargin="-5,-2,2,2" Background="Transparent" BorderBrush="Transparent"
                                                                 IconFill="{StaticResource ThemeColor_Back5}"
                                                                 ToolTip="Disqualify">
                                                    <controls:IconButton.Content>
                                                        <fa:ImageAwesome Icon="FlagOutline"/>
                                                    </controls:IconButton.Content>
                                                    <controls:IconButton.Style>
                                                        <Style TargetType="controls:IconButton">
                                                            <Setter Property="Visibility" Value="Visible"/>
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding Disqualified}" Value="True">
                                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </controls:IconButton.Style>
                                                </controls:IconButton>
                                                <controls:IconButton Command="{Binding ToggleDSQCmd}"
                                                                 Width="28" Height="25" Margin="-2,0,-2,0" Padding="2,2,4,2"
                                                                 IconMargin="-5,-2,2,2" Background="Transparent" BorderBrush="Transparent"
                                                                 IconFill="{StaticResource ThemeColor_Back5}"
                                                                 ToolTip="Undo Disqualify">
                                                    <controls:IconButton.Content>
                                                        <fa:ImageAwesome Icon="Flag"/>
                                                    </controls:IconButton.Content>
                                                    <controls:IconButton.Style>
                                                        <Style TargetType="controls:IconButton">
                                                            <Setter Property="Visibility" Value="Collapsed"/>
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding Disqualified}" Value="True">
                                                                    <Setter Property="Visibility" Value="Visible"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </controls:IconButton.Style>
                                                </controls:IconButton>
                                                <controls:IconButton Click="DeleteRowButton_Click" Tag="{Binding}"
                                                                 Width="28" Height="25" Margin="-2,0,-2,0" Padding="2,2,4,2"
                                                                 IconMargin="-5,-2,2,2"
                                                                 IconFill="{StaticResource ThemeColor_Back5}">
                                                    <controls:IconButton.IconContent>
                                                        <Viewbox>
                                                            <ContentControl Content="{DynamicResource delete}"/>
                                                        </Viewbox>
                                                    </controls:IconButton.IconContent>
                                                </controls:IconButton>
                                            </StackPanel>
                                            <!--<Button Content="{StaticResource delete}" Click="DeleteRowButton_Click" Tag="{Binding}"
                                Style="{StaticResource IconButtonStyle}"/>-->
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                            </DataGrid.Columns>
                        </DataGrid>
                    </DataTemplate>
                </TabControl.Resources>
            </TabControl>
            <StackPanel Margin="0,10,3,10" Orientation="Horizontal" FlowDirection="RightToLeft">
                <!-- Calculate Results button. Can be removed if automated result calculation works properly
                
                <controls:IconButton Content="Calculate" IconContent="{StaticResource CogRefresh}" Command="{Binding CalculateResultsCmd}"
                                     HorizontalContentAlignment="Center" VerticalContentAlignment="Center" IconMargin="0,-4,0,0"
                                     Background="{StaticResource  ThemeColor_DarkBlue}" CornerRadius="15" Padding="10,10,10,8"
                                     IconFill="{StaticResource ThemeColor_Back0}" IconStrokeThickness="0" 
                                     Foreground="{StaticResource ThemeColor_Back0}"
                                     Height="Auto" Width="Auto" HorizontalAlignment="Right" VerticalAlignment="Top"
                                     ToolTip="Calculate Results" Margin="5,0">
                    <controls:IconButton.Effect>
                        <DropShadowEffect BlurRadius="12" ShadowDepth="4" Opacity="1"/>
                    </controls:IconButton.Effect>
                </controls:IconButton>-->
            </StackPanel>
        </Grid>
        <TextBox Grid.Row="1" Margin="10" Text="{Binding StatusMsg}" VerticalAlignment="Top">
            <TextBox.Style>
                <Style TargetType="TextBox">
                    <Setter Property="Visibility" Value="Visible"/>
                    <Style.Triggers>
                        <Trigger Property="Text" Value="">
                            <Setter Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </TextBox.Style>
        </TextBox>
    </Grid>
</UserControl>

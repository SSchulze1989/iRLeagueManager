<UserControl x:Class="iRLeagueManager.Views.ReviewsControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:vmodel="clr-namespace:iRLeagueManager.ViewModels"
             xmlns:local="clr-namespace:iRLeagueManager.Views"
             xmlns:conv="clr-namespace:iRLeagueManager.Converters"
             mc:Ignorable="d" 
             d:DesignHeight="600" d:DesignWidth="800" Background="White" FontSize="14">
	<UserControl.Resources>
		<Path x:Key="PencilPlusOutline" x:Shared="False"
              Data="M14.1,9L15,9.9L5.9,19H5V18.1L14.1,9M17.7,3C17.5,3 17.2,3.1 17,3.3L15.2,5.1L18.9,8.9L20.7,7C21.1,6.6 21.1,6 20.7,5.6L18.4,3.3C18.2,3.1 17.9,3 17.7,3M14.1,6.2L3,17.2V21H6.8L17.8,9.9L14.1,6.2M7,2V5H10V7H7V10H5V7H2V5H5V2H7Z"
              Fill="{Binding RelativeSource={RelativeSource AncestorType={x:Type ContentControl}}, Path=Foreground}"/>
		<Path x:Key="PlusThick" x:Shared="False"
              Data="M20 14H14V20H10V14H4V10H10V4H14V10H20V14Z"
              Fill="{Binding RelativeSource={RelativeSource AncestorType={x:Type ContentControl}}, Path=Foreground}"/>
		<Path x:Key="delete" x:Shared="False"
              Data="M19,4H15.5L14.5,3H9.5L8.5,4H5V6H19M6,19A2,2 0 0,0 8,21H16A2,2 0 0,0 18,19V7H6V19Z"
              Fill="{Binding RelativeSource={RelativeSource AncestorType={x:Type ContentControl}}, Path=Foreground}"/>
		<Path x:Key="closeThick" x:Shared="False"
              Data="M20 6.91L17.09 4L12 9.09L6.91 4L4 6.91L9.09 12L4 17.09L6.91 20L12 14.91L17.09 20L20 17.09L14.91 12L20 6.91Z"
              Fill="{Binding RelativeSource={RelativeSource AncestorType={x:Type ContentControl}}, Path=Foreground}"/>
		<Path x:Key="closeOutlineRed" x:Shared="False"
              Data="M3,16.74L7.76,12L3,7.26L7.26,3L12,7.76L16.74,3L21,7.26L16.24,12L21,16.74L16.74,21L12,16.24L7.26,21L3,16.74M12,13.41L16.74,18.16L18.16,16.74L13.41,12L18.16,7.26L16.74,5.84L12,10.59L7.26,5.84L5.84,7.26L10.59,12L5.84,16.74L7.26,18.16L12,13.41Z"
              Fill="{Binding RelativeSource={RelativeSource AncestorType={x:Type ContentControl}}, Path=Foreground}"/>
		<Path x:Key="checkOutlineGreen" x:Shared="False"
          Data="M19.78,2.2L24,6.42L8.44,22L0,13.55L4.22,9.33L8.44,13.55L19.78,2.2M19.78,5L8.44,16.36L4.22,12.19L2.81,13.55L8.44,19.17L21.19,6.42L19.78,5Z"
              Fill="Green"/>
		<Path x:Key="checkBold" x:Shared="False"
              Data="M9,20.42L2.79,14.21L5.62,11.38L9,14.77L18.88,4.88L21.71,7.71L9,20.42Z" 
              Fill="{Binding RelativeSource={RelativeSource AncestorType={x:Type ContentControl}}, Path=Foreground}"/>
		<Path x:Key="pencilOutline" x:Shared="False"
              Data="M14.06,9L15,9.94L5.92,19H5V18.08L14.06,9M17.66,3C17.41,3 17.15,3.1 16.96,3.29L15.13,5.12L18.88,8.87L20.71,7.04C21.1,6.65 21.1,6 20.71,5.63L18.37,3.29C18.17,3.09 17.92,3 17.66,3M14.06,6.19L3,17.25V21H6.75L17.81,9.94L14.06,6.19Z"
              Fill="{Binding RelativeSource={RelativeSource AncestorType={x:Type ContentControl}}, Path=Foreground}"/>
		<Path x:Key="TableArrowUp" x:Shared="False"
              Data="M4 3H18C19.11 3 20 3.9 20 5V12.08C18.45 11.82 16.92 12.18 15.68 13H12V17H13.08C12.97 17.68 12.97 18.35 13.08 19H4C2.9 19 2 18.11 2 17V5C2 3.9 2.9 3 4 3M4 7V11H10V7H4M12 7V11H18V7H12M4 13V17H10V13H4M21.94 17.5H19.94V21.5H17.94V17.5H15.94L18.94 14.5L21.94 17.5"
              Fill="{Binding RelativeSource={RelativeSource AncestorType={x:Type ContentControl}}, Path=Foreground}"/>
		<Path x:Key="CogRefresh" x:Shared="False"
              Data="M18 14.5C19.1 14.5 20.1 14.9 20.8 15.7L22 14.5V18.5H18L19.8 16.7C19.3 16.3 18.7 16 18 16C16.6 16 15.5 17.1 15.5 18.5S16.6 21 18 21C18.8 21 19.5 20.6 20 20H21.7C21.1 21.5 19.7 22.5 18 22.5C15.8 22.5 14 20.7 14 18.5S15.8 14.5 18 14.5M11.5 18.5C11.5 17.4 11.8 16.4 12.2 15.5H12C10.1 15.5 8.5 13.9 8.5 12S10.1 8.5 12 8.5 15.5 10.1 15.5 12C15.5 12.2 15.5 12.4 15.4 12.5C16.2 12.2 17 12 18 12C18.5 12 19 12.1 19.5 12.2V12C19.5 11.7 19.5 11.3 19.4 11L21.5 9.4C21.7 9.2 21.7 9 21.6 8.8L19.6 5.3C19.5 5 19.3 5 19 5L16.5 6C16 5.6 15.4 5.3 14.8 5L14.4 2.3C14.5 2.2 14.2 2 14 2H10C9.8 2 9.5 2.2 9.5 2.4L9.1 5.1C8.5 5.3 8 5.7 7.4 6L5 5C4.7 5 4.5 5 4.3 5.3L2.3 8.8C2.2 9 2.3 9.2 2.5 9.4L4.6 11C4.6 11.3 4.5 11.7 4.5 12S4.5 12.7 4.6 13L2.5 14.7C2.3 14.9 2.3 15.1 2.4 15.3L4.4 18.8C4.5 19 4.7 19 5 19L7.5 18C8 18.4 8.6 18.7 9.2 19L9.6 21.7C9.6 21.9 9.8 22.1 10.1 22.1H12.6C11.9 21 11.5 19.8 11.5 18.5Z"
              Fill="{Binding RelativeSource={RelativeSource AncestorType={x:Type ContentControl}}, Path=Foreground}"/>
		<Path x:Key="Cached" x:Shared="False"
              Data="M19,8L15,12H18A6,6 0 0,1 12,18C11,18 10.03,17.75 9.2,17.3L7.74,18.76C8.97,19.54 10.43,20 12,20A8,8 0 0,0 20,12H23M6,12A6,6 0 0,1 12,6C13,6 13.97,6.25 14.8,6.7L16.26,5.24C15.03,4.46 13.57,4 12,4A8,8 0 0,0 4,12H1L5,16L9,12"
              Fill="{Binding RelativeSource={RelativeSource AncestorType={x:Type ContentControl}}, Path=Foreground}"/>
		<SolidColorBrush x:Key="ListBorder" Color="#828790"/>
		<Style x:Key="TreeViewItemFocusVisual">
			<Setter Property="Control.Template">
				<Setter.Value>
					<ControlTemplate>
						<Rectangle/>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Checked.Fill" Color="#FF595959"/>
		<SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Checked.Stroke" Color="#FF262626"/>
		<SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Stroke" Color="#FF27C7F7"/>
		<SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Fill" Color="#FFCCEEFB"/>
		<SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Checked.Stroke" Color="#FF1CC4F7"/>
		<SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Checked.Fill" Color="#FF82DFFB"/>
		<PathGeometry x:Key="TreeArrow" Figures="M0,0 L0,6 L6,0 z"/>
		<SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Fill" Color="#FFFFFFFF"/>
		<SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Stroke" Color="#FF818181"/>
		<Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
			<Setter Property="Focusable" Value="False"/>
			<Setter Property="Width" Value="16"/>
			<Setter Property="Height" Value="16"/>
			<Setter Property="Visibility" Value="Hidden"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ToggleButton}">
						<Border Background="Transparent" Height="16" Padding="5,5,5,5" Width="16">
							<Path x:Name="ExpandPath" Data="{StaticResource TreeArrow}" Fill="{StaticResource TreeViewItem.TreeArrow.Static.Fill}" Stroke="{StaticResource TreeViewItem.TreeArrow.Static.Stroke}">
								<Path.RenderTransform>
									<RotateTransform Angle="135" CenterY="3" CenterX="3"/>
								</Path.RenderTransform>
							</Path>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsChecked" Value="True">
								<Setter Property="RenderTransform" TargetName="ExpandPath">
									<Setter.Value>
										<RotateTransform Angle="180" CenterY="3" CenterX="3"/>
									</Setter.Value>
								</Setter>
								<Setter Property="Fill" TargetName="ExpandPath" Value="{StaticResource TreeViewItem.TreeArrow.Static.Checked.Fill}"/>
								<Setter Property="Stroke" TargetName="ExpandPath" Value="{StaticResource TreeViewItem.TreeArrow.Static.Checked.Stroke}"/>
							</Trigger>
							<Trigger Property="IsMouseOver" Value="True">
								<Setter Property="Stroke" TargetName="ExpandPath" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Stroke}"/>
								<Setter Property="Fill" TargetName="ExpandPath" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Fill}"/>
							</Trigger>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="IsMouseOver" Value="True"/>
									<Condition Property="IsChecked" Value="True"/>
								</MultiTrigger.Conditions>
								<Setter Property="Stroke" TargetName="ExpandPath" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Checked.Stroke}"/>
								<Setter Property="Fill" TargetName="ExpandPath" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Checked.Fill}"/>
							</MultiTrigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="FocusVisual">
			<Setter Property="Control.Template">
				<Setter.Value>
					<ControlTemplate>
						<Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<SolidColorBrush x:Key="Button.Static.Background" Color="Transparent"/>
		<SolidColorBrush x:Key="Button.Static.Border" Color="Gray"/>
		<SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
		<SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
		<SolidColorBrush x:Key="Button.Pressed.Background" Color="Transparent"/>
		<SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
		<SolidColorBrush x:Key="Button.Disabled.Background" Color="Transparent"/>
		<SolidColorBrush x:Key="Button.Disabled.Border" Color="Gray"/>
		<SolidColorBrush x:Key="Button.Disabled.Foreground" Color="Black"/>
		<Style x:Key="ToggleCommentStyle" TargetType="{x:Type ToggleButton}">
			<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
			<Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
			<Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="HorizontalContentAlignment" Value="Center"/>
			<Setter Property="VerticalContentAlignment" Value="Center"/>
			<Setter Property="Padding" Value="1"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ToggleButton}">
						<Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
							<ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="Button.IsDefaulted" Value="true">
								<Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
							</Trigger>
							<Trigger Property="IsMouseOver" Value="true">
								<Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
								<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
							</Trigger>
							<Trigger Property="IsPressed" Value="true">
								<Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
								<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
							</Trigger>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
								<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
								<Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
							</Trigger>
							<DataTrigger Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Items.Count}" Value="0">
								<Setter Property="IsHitTestVisible" Value="False"/>
							</DataTrigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="CommentItemStyle" TargetType="{x:Type TreeViewItem}">
			<Setter Property="Background" Value="Transparent"/>
			<Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
			<Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
			<Setter Property="Padding" Value="1,0,0,0"/>
			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
			<Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type TreeViewItem}">
						<Grid>
							<Grid.ColumnDefinitions>
								<ColumnDefinition MinWidth="19" Width="Auto"/>
								<!--<ColumnDefinition Width="Auto"/>-->
								<ColumnDefinition Width="*"/>
							</Grid.ColumnDefinitions>
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto"/>
								<RowDefinition/>
							</Grid.RowDefinitions>
							<ToggleButton x:Name="Expander" ClickMode="Press" IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" 
										  Style="{StaticResource ExpandCollapseToggleStyle}"/>
							<Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" 
									Background="{TemplateBinding Background}" Grid.Column="1" Padding="{TemplateBinding Padding}" 
									SnapsToDevicePixels="true">
								<!--<ToggleButton ClickMode="Press" IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" 
											  HorizontalAlignment="Stretch" 
											  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
											  Style="{StaticResource ToggleCommentStyle}">
									<ToggleButton.Content>-->
										<ContentPresenter x:Name="PART_Header" ContentSource="Header" 
														  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
														  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
									<!--</ToggleButton.Content>
									<ToggleButton.Style>
										<Style TargetType="ToggleButton" BasedOn="{StaticResource ToggleCommentStyle}">
											<Setter Property="IsEnabled" Value="True"/>
											<Setter Property="Background" Value="Transparent"/>
											<Setter Property="BorderBrush" Value="Gray"/>
											<Style.Triggers>
												<DataTrigger Binding="{Binding Items.Count, RelativeSource={RelativeSource TemplatedParent}}" Value="0">
													<Setter Property="IsHitTestVisible" Value="False"/>
												</DataTrigger>
												<Trigger Property="IsChecked" Value="True">
													<Setter Property="Background" Value="Transparent"/>
												</Trigger>
											</Style.Triggers>
										</Style>
									</ToggleButton.Style>
								</ToggleButton>-->
							</Border>
							<ItemsPresenter x:Name="ItemsHost" Grid.ColumnSpan="2" Grid.Column="1" Grid.Row="1"/>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsExpanded" Value="false">
								<Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed"/>
							</Trigger>
							<Trigger Property="HasItems" Value="false">
								<Setter Property="Visibility" TargetName="Expander" Value="Hidden"/>
							</Trigger>
							<Trigger Property="IsSelected" Value="true">
								<Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
								<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
							</Trigger>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="IsSelected" Value="true"/>
									<Condition Property="IsSelectionActive" Value="false"/>
								</MultiTrigger.Conditions>
								<Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
								<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}"/>
							</MultiTrigger>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
			<Style.Triggers>
				<Trigger Property="VirtualizingPanel.IsVirtualizing" Value="true">
					<Setter Property="ItemsPanel">
						<Setter.Value>
							<ItemsPanelTemplate>
								<VirtualizingStackPanel/>
							</ItemsPanelTemplate>
						</Setter.Value>
					</Setter>
				</Trigger>
			</Style.Triggers>
		</Style>
	</UserControl.Resources>

	<Grid>
		<DockPanel>
			<StackPanel DockPanel.Dock="Bottom" Orientation="Horizontal" FlowDirection="RightToLeft" Height="Auto">
				<Button Command="{Binding RefreshCmd}" Padding="1" BorderBrush="Transparent" Background="Transparent" Margin="5,0">
					<Button.Content>
						<StackPanel Orientation="Horizontal" FlowDirection="LeftToRight">
							<ContentControl Margin="0,0,5,0">
								<StaticResource ResourceKey="Cached"/>
							</ContentControl>
							<TextBlock Text="Refresh" FontSize="18"/>
						</StackPanel>
					</Button.Content>
				</Button>
			</StackPanel>
			<Grid>
				<Grid.RowDefinitions>
					<RowDefinition Height="Auto" />
					<RowDefinition Height="Auto" />
					<RowDefinition />
				</Grid.RowDefinitions>

				<TextBlock Grid.Row="0" Text="Reviews" FontSize="20" FontWeight="Bold"/>

				<Grid Grid.Row="1" Margin="5">
					<Grid.RowDefinitions>
						<RowDefinition Height="Auto" />
						<RowDefinition Height="Auto"/>
						<RowDefinition Height="Auto"/>
						<RowDefinition Height="Auto"/>
						<RowDefinition />
					</Grid.RowDefinitions>

					<TextBlock Grid.Row="0" Text="Sessions" Margin="5,2" />
					<DockPanel Grid.Row="1" HorizontalAlignment="Stretch" DataContext="{Binding SessionSelect}">
						<Button Content="&lt;" Padding="5" DockPanel.Dock="Left" Command="{Binding PreviousSessionCmd}"/>
						<Button Content="&gt;" Padding="5" DockPanel.Dock="Right" Command="{Binding NextSessionCmd}"/>
						<ComboBox ItemsSource="{Binding SessionList}" SelectedItem="{Binding SelectedSession}">
							<ComboBox.ItemTemplate>
								<DataTemplate DataType="{x:Type ComboBoxItem}">
									<TextBlock>
										<TextBlock.Text>
											<MultiBinding StringFormat="{}{0} - {1} - (Id: {2})">
												<Binding Path="Date" StringFormat="Date"/>
                                                <Binding Path="Location.FullName"/>
                                                <Binding Path="SessionId"/>
                                            </MultiBinding>
										</TextBlock.Text>
									</TextBlock>
								</DataTemplate>
							</ComboBox.ItemTemplate>
							<ComboBox.ItemContainerStyle>
								<Style TargetType="ComboBoxItem">
									<Setter Property="IsEnabled" Value="{Binding ResultAvailable}" />
								</Style>
							</ComboBox.ItemContainerStyle>
						</ComboBox>
					</DockPanel>

					<TextBlock Grid.Row="2" Text="Reported Incidents:" Margin="5,15,5,2"/>
					<Grid Grid.Row="3">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*"/>
							<ColumnDefinition Width="Auto"/>
						</Grid.ColumnDefinitions>

                        <ListBox Grid.Column="0" Height="120" ItemsSource="{Binding CurrentReviews}" Name="ReviewList" SelectedItem="{Binding SelectedReview}">
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock Text="{Binding OnLap, StringFormat={} Lap: {0}}" MinWidth="60"/>
                                        <Separator Margin="5,0"/>
                                        <TextBlock Text="{Binding Corner, StringFormat={} Corner: {0}}" MinWidth="80"/>
                                        <Separator Margin="10,0"/>
                                        <TextBlock Text="{Binding IncidentKind, StringFormat={} Incident: {0}}" Width="320"/>
                                        <Separator Margin="10,0"/>
                                        <TextBlock Text="Involved: "/>
                                        <ItemsControl ItemsSource="{Binding InvolvedMembers}">
                                            <ItemsControl.ItemsPanel>
                                                <ItemsPanelTemplate>
                                                    <StackPanel Orientation="Horizontal"/>
                                                </ItemsPanelTemplate>
                                            </ItemsControl.ItemsPanel>
                                            <ItemsControl.ItemTemplate>
                                                <DataTemplate>
                                                    <StackPanel Orientation="Horizontal">
                                                        <TextBlock x:Name="CommaTextBlock" Text=", "/>
                                                        <TextBlock Text="{Binding FullName}"/>
                                                    </StackPanel>
                                                    <DataTemplate.Triggers>
                                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource PreviousData}}" Value="{x:Null}">
                                                            <Setter Property="Visibility" TargetName="CommaTextBlock" Value="Collapsed"/>
                                                        </DataTrigger>
                                                    </DataTemplate.Triggers>
                                                </DataTemplate>
                                            </ItemsControl.ItemTemplate>
                                        </ItemsControl>
                                    </StackPanel>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>

						<Grid Grid.Column="1" Width="Auto">
							<Grid.RowDefinitions>
								<RowDefinition />
								<RowDefinition />
								<RowDefinition />
							</Grid.RowDefinitions>

							<Button Content="New" Grid.Row="0" Margin="5" Command="{Binding AddReviewCmd}"/>
							<Button Content="Edit" Grid.Row="1" Margin="5" Click="EditButton_Click" Tag="{Binding SelectedReview}"/>
                            <Button Content="Delete" Grid.Row="2" Margin="5" Command="{Binding RemoveReviewCmd}"/>
						</Grid>
					</Grid>
				</Grid>

				<Grid Grid.Row="2">
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="40*"/>
						<ColumnDefinition Width="60*"/>
					</Grid.ColumnDefinitions>

					<Grid.RowDefinitions>
						<RowDefinition Height="Auto"/>
						<RowDefinition Height="*"/>
					</Grid.RowDefinitions>

					<TextBlock Grid.Row="0" Grid.Column="0" Text="Overview" Margin="5,2"/>
                    <RichTextBox Grid.Row="1" Grid.Column="0" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Margin="5" DataContext="{Binding SelectedReview}" IsReadOnly="True">
                        <FlowDocument TextElement.FontSize="12" TextElement.FontFamily="Default">
                            <Paragraph>
                                <Bold>Incident Type:</Bold>
                                <LineBreak/>
                                <TextBlock Text="{Binding IncidentKind}"/>
                            </Paragraph>
                            <Paragraph>
                                <Bold>What happened?</Bold>
                                <LineBreak/>
                                <TextBlock Text="{Binding FullDescription}"/>
                            </Paragraph>
                            <Paragraph>
                                <Bold>Involved Members:</Bold>
                                <LineBreak/>
                                <ItemsControl ItemsSource="{Binding InvolvedMembers}">
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <BulletDecorator>
                                                <BulletDecorator.Bullet>
                                                    <Ellipse Height="5" Width="5" Fill="Black"/>
                                                </BulletDecorator.Bullet>
                                                    <TextBlock Text="{Binding FullName}" Margin="15,0"/>
                                            </BulletDecorator>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>
                            </Paragraph>
                            <Paragraph>
                                <Bold>Steward Votes:</Bold>
                                <LineBreak/>
                                <ItemsControl ItemsSource="{Binding Votes}">
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <BulletDecorator>
                                                <BulletDecorator.Bullet>
                                                    <Ellipse Height="5" Width="5" Fill="Black"/>
                                                </BulletDecorator.Bullet>
                                                <StackPanel Orientation="Horizontal" Margin="15,0">
                                                    <TextBlock Text="{Binding Key.Vote}"/>
                                                    <TextBlock Text=": "/>
                                                    <TextBlock Text="{Binding Key.MemberAtFault.FullName}"/>
                                                    <TextBlock Text="{Binding Value, StringFormat={} ({0}x)}"/>
                                                </StackPanel>
                                            </BulletDecorator>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>
                            </Paragraph>
                            <Paragraph>
                                <Bold>Accepted Votes:</Bold>
                                <LineBreak/>
                                <ItemsControl ItemsSource="{Binding AcceptedVotes}">
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <BulletDecorator>
                                                <BulletDecorator.Bullet>
                                                    <Ellipse Height="5" Width="5" Fill="Black"/>
                                                </BulletDecorator.Bullet>
                                                <StackPanel Orientation="Horizontal" Margin="15,0">
                                                    <TextBlock Text="{Binding Vote}"/>
                                                    <TextBlock Text=": "/>
                                                    <TextBlock Text="{Binding MemberAtFault.FullName}"/>
                                                </StackPanel>
                                            </BulletDecorator>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>
                            </Paragraph>
                        </FlowDocument>
                        <RichTextBox.Style>
                            <Style TargetType="RichTextBox">
                                <Setter Property="IsDocumentEnabled" Value="False"/>
                            </Style>
                        </RichTextBox.Style>
                    </RichTextBox>

					<TextBlock Grid.Row="0" Grid.Column="1" Text="Discussion" Margin="5,2"/>
					<!--<ScrollViewer Grid.Row="1" Grid.Column="1">
                        <ItemsControl Margin="5" BorderBrush="DarkGray" BorderThickness="1" VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                            <ItemsControl.Items>
                                <vmodel:ReviewCommentViewModel />
                                <vmodel:ReviewCommentViewModel />
                                <vmodel:ReviewCommentViewModel />
                            </ItemsControl.Items>
                            <ItemsControl.ItemTemplate>
                                <DataTemplate DataType="{x:Type vmodel:ReviewCommentViewModel}">
                                    <Grid Margin="2">
                                        <Grid.RowDefinitions>
                                            <RowDefinition />
                                            <RowDefinition />
                                            <RowDefinition />
                                        </Grid.RowDefinitions>
                                        <Rectangle Stroke="Black" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Grid.RowSpan="2"/>
                                        <Rectangle Stroke="Black" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Grid.RowSpan="{Binding RelativeSource={RelativeSource AncestorType=Grid}, Path=RowDefinitions.Count}" />
                                        <Button HorizontalAlignment="Stretch" HorizontalContentAlignment="Left" BorderBrush="Transparent" Background="Transparent">
                                            <Grid Grid.Row="0">
                                                <Grid.RowDefinitions>
                                                    <RowDefinition />
                                                    <RowDefinition />
                                                </Grid.RowDefinitions>
                                                <TextBlock Grid.Row="0" Text="{Binding Author.FullName}" FontWeight="Bold" Margin="4,0"/>
                                                <TextBlock Grid.Row="1" Text="{Binding Text}" Margin="8,0"/>
                                            </Grid>
                                        </Button>
                                        <StackPanel Grid.Row="1" HorizontalAlignment="Right" Orientation="Horizontal">
                                            <Button Content="Edit" Padding="-2" />
                                        </StackPanel>
                                        <ItemsControl Grid.Row="3" Padding="8,0,0,0" BorderThickness="0,0,1,0" Margin="0">
                                            <ItemsControl.ItemTemplate>
                                                <DataTemplate DataType="{x:Type vmodel:ReviewCommentViewModel}">
                                                    <Border BorderThickness="0,0,0,1" BorderBrush="Black">
                                                        <Grid>
                                                            <Grid.RowDefinitions>
                                                                <RowDefinition />
                                                                <RowDefinition />
                                                                <RowDefinition />
                                                            </Grid.RowDefinitions>
                                                            <TextBlock Grid.Row="0" Text="{Binding Author.FullName}" FontWeight="Bold" Margin="4,1"/>
                                                            <TextBlock Grid.Row="1" Text="{Binding Text}" Margin="8,1"/>
                                                            <StackPanel Grid.Row="2" HorizontalAlignment="Right" Orientation="Horizontal">
                                                                <Button Content="Edit" Padding="0,-2"/>
                                                            </StackPanel>
                                                        </Grid>
                                                    </Border>
                                                </DataTemplate>
                                            </ItemsControl.ItemTemplate>
                                        </ItemsControl>
                                    </Grid>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </ScrollViewer>-->
					<TreeView Grid.Row="2" Grid.Column="1" ItemContainerStyle="{DynamicResource CommentItemStyle}" 
                              DataContext="{Binding SelectedReview}"
							  HorizontalContentAlignment="Stretch" Margin="5"
                              ItemsSource="{Binding Comments}">
						<!--<TreeView.Items>
							<vmodel:ReviewCommentViewModel />
							<vmodel:ReviewCommentViewModel />
							<vmodel:ReviewCommentViewModel />
						</TreeView.Items>-->
						<TreeView.Resources>
                            <HierarchicalDataTemplate DataType="{x:Type vmodel:ReviewCommentViewModel}" 
													  ItemsSource="{Binding Replys}">
                                <Grid Margin="2" HorizontalAlignment="Stretch">
                                    <Grid.RowDefinitions>
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                    </Grid.RowDefinitions>
                                    <!--<Rectangle Stroke="Black" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Grid.RowSpan="2"/>-->
                                    <!--<Rectangle Stroke="Black" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Grid.RowSpan="{Binding RelativeSource={RelativeSource AncestorType=Grid}, Path=RowDefinitions.Count}" />-->
                                    <Grid Grid.Row="0">
                                        <Grid.RowDefinitions>
                                            <RowDefinition />
                                            <RowDefinition />
                                        </Grid.RowDefinitions>
                                        <TextBlock Grid.Row="0" Text="{Binding AuthorName}" FontWeight="Bold" Margin="4,0"/>
                                        <TextBlock Grid.Row="1" Text="{Binding Text}" Margin="8,0"/>
                                    </Grid>
                                    <StackPanel Grid.Row="1" HorizontalAlignment="Right" Orientation="Horizontal">
                                        <Button Content="Reply" Padding="0,-2" Margin="2,0"/>
                                        <Button Content="Edit" Padding="0,-2" Margin="2,0" Click="CommentEditButton_Click" Tag="{Binding}">
                                            <Button.Style>
                                                <Style TargetType="Button">
                                                    <Setter Property="Visibility" Value="Visible"/>
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding IsUserAuthor}" Value="False">
                                                            <Setter Property="Visibility" Value="Collapsed" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Button.Style>
                                        </Button>
                                    </StackPanel>
                                </Grid>
                            </HierarchicalDataTemplate>
                            <DataTemplate DataType="{x:Type vmodel:CommentViewModel}">
								<!--<Border BorderThickness="0,0,0,1" BorderBrush="Black">-->
								<Grid>
									<Grid.RowDefinitions>
										<RowDefinition />
										<RowDefinition />
										<RowDefinition />
									</Grid.RowDefinitions>
									<TextBlock Grid.Row="0" Text="{Binding AuthorName}" FontWeight="Bold" Margin="4,1"/>
									<TextBlock Grid.Row="1" Text="{Binding Text}" Margin="8,1"/>
                                    <Grid Grid.Row="2">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        
                                        <StackPanel Grid.Column="1" HorizontalAlignment="Right" Orientation="Horizontal">
                                            <Button Content="Edit" Padding="0,-2" Click="CommentEditButton_Click" Tag="{Binding}">
                                                <Button.Style>
                                                    <Style TargetType="Button">
                                                        <Setter Property="Visibility" Value="Collapsed"/>
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding IsUserAuthor}" Value="True">
                                                                <Setter Property="Visibility" Value="Visible"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Button.Style>
                                            </Button>
                                        </StackPanel>
                                    </Grid>
                                </Grid>
								<!--</Border>-->
							</DataTemplate>
						</TreeView.Resources>
					</TreeView>
				</Grid>
			</Grid>
		</DockPanel>
	</Grid>
</UserControl>

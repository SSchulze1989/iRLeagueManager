<!--// MIT License

// Copyright (c) 2020 Simon Schulze

// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:

// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.

// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.-->

<UserControl x:Class="iRLeagueManager.Views.FiltersEditControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:conv="clr-namespace:iRLeagueManager.Converters"
             xmlns:vmodel="clr-namespace:iRLeagueManager.ViewModels"
             xmlns:enum="clr-namespace:iRLeagueManager.Enums;assembly=Communication"
             xmlns:controls="clr-namespace:iRLeagueManager.Controls"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:fa="http://schemas.fontawesome.io/icons/"    
             xmlns:local="clr-namespace:iRLeagueManager.Views"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="720">
    <UserControl.Resources>
        <conv:VisibilityConverter x:Key="VisibilityConverter"/>
        <ObjectDataProvider MethodName="GetValues"
                        ObjectType="{x:Type sys:Enum}"
                        x:Key="ComparatorTypeEnum">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="enum:ComparatorTypeEnum"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <controls:FilterValueSelectTemplateSelector x:Key="FilterValueSelectTemplateSelector"/>
        <Style TargetType="TextBlock" x:Key="HeaderTextBlockStyle">
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Foreground" Value="{StaticResource ThemeColor_Back4}"/>
        </Style>
        <DataTemplate x:Key="FilterValueListSelection">
            <Grid>
                <StackPanel Orientation="Horizontal" x:Name="ValueStackPanel">
                    <TextBox Width="194" Text="{Binding FilterValueString, ValidatesOnExceptions=True}" IsReadOnly="True"/>
                    <controls:IconToggleButton Content="..." x:Name="expandButton" BorderBrush="{StaticResource ThemeColor_Back5}" BorderThickness="1" Margin="2" Padding="2"
                                         Click="expandButton_Click" Tag="{Binding ElementName=ListPopup}"/>
                </StackPanel>
                <Popup Width="250" Height="300" StaysOpen="False" x:Name="ListPopup" MouseDown="ListPopup_MouseDown" Tag="{Binding ElementName=expandButton}" Closed="ListPopup_Closed">
                    <DataGrid ItemsSource="{Binding FilterValues}" CanUserAddRows="True" AutoGenerateColumns="False">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Value" Binding="{Binding Value}" Width="240">
                                <DataGridTextColumn.Visibility>
                                    <Binding Path="DataContext.IsMemberType" Source="{x:Reference ValueStackPanel}" Converter="{StaticResource VisibilityConverter}">
                                        <Binding.ConverterParameter>
                                            <sys:Boolean>False</sys:Boolean>
                                        </Binding.ConverterParameter>
                                    </Binding>
                                </DataGridTextColumn.Visibility>
                            </DataGridTextColumn>
                            <DataGridTemplateColumn Header="Members" Width="240">
                                <DataGridTemplateColumn.Visibility>
                                    <Binding Path="DataContext.IsMemberType" Source="{x:Reference ValueStackPanel}" Converter="{StaticResource VisibilityConverter}">
                                        <Binding.ConverterParameter>
                                            <sys:Boolean>True</sys:Boolean>
                                        </Binding.ConverterParameter>
                                    </Binding>
                                </DataGridTemplateColumn.Visibility>
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <ComboBox ItemsSource="{Binding Source={x:Static vmodel:FilterEditViewModel.MemberList}, Path=MemberList}" SelectedItem="{Binding Value}" DisplayMemberPath="FullName"
                                                  IsTextSearchEnabled="True" IsEditable="True"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                                <DataGridTemplateColumn.CellEditingTemplate>
                                    <DataTemplate>
                                        <ComboBox ItemsSource="{Binding Source={x:Static vmodel:FilterEditViewModel.MemberList}, Path=MemberList}" SelectedItem="{Binding Value}" DisplayMemberPath="FullName"
                                                  IsTextSearchEnabled="True" IsEditable="True"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellEditingTemplate>
                            </DataGridTemplateColumn>
                        </DataGrid.Columns>
                    </DataGrid>
                </Popup>
            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="FilterValueEdit">
            <TextBox Width="228" Text="{Binding FilterValueString, ValidatesOnExceptions=True}"/>
        </DataTemplate>
        <!--<DataTemplate DataType="{x:Type vmodel:ResultsFilterOptionViewModel}">
            <Grid x:Name="FilterGrid" Margin="5">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="120*" MinWidth="120"/>
                    <ColumnDefinition Width="120*" MinWidth="120"/>
                    <ColumnDefinition Width="40*" MinWidth="40"/>
                    <ColumnDefinition Width="20*" MinWidth="20"/>
                    <ColumnDefinition Width="180*" MinWidth="180"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                
                <ComboBox Grid.Row="1" Grid.Column="0" ItemsSource="{Binding FilterProperties}" SelectedValue="{Binding ColumnPropertyName}"/>
                
                <ComboBox Grid.Row="1" Grid.Column="1" ItemsSource="{Binding Source={StaticResource ComparatorTypeEnum}}" SelectedItem="{Binding Comparator}"/>

                <CheckBox Grid.Row="1" Grid.Column="2" IsChecked="{Binding Exclude}"/>

                <TextBlock Grid.Row="1" Grid.Column="3" Text="{Binding ColumnPropertyType.Name}" VerticalAlignment="Center" Margin="5"/>

                <ContentControl Grid.Row="1" Grid.Column="4" Content="{Binding}" x:Name="ValuesEdit">
                    <ContentControl.Style>
                        <Style TargetType="ContentControl">
                            <Setter Property="ContentTemplate" Value="{StaticResource FilterValueEdit}"/>
                        </Style>
                    </ContentControl.Style>
                </ContentControl>

                <Grid.Resources>
                    <Style TargetType="ComboBox" BasedOn="{StaticResource {x:Type ComboBox}}">
                        <Setter Property="Margin" Value="5"/>
                        <Setter Property="TextElement.Foreground" Value="Black"/>
                    </Style>
                    <Style TargetType="CheckBox">
                        <Setter Property="Margin" Value="5"/>
                        <Setter Property="HorizontalAlignment" Value="Center"/>
                        <Setter Property="VerticalAlignment" Value="Center"/>
                    </Style>
                </Grid.Resources>
            </Grid>
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding Comparator}" Value="{x:Static enum:ComparatorTypeEnum.InList}">
                    <Setter TargetName="ValuesEdit" Property="ContentTemplate" Value="{StaticResource FilterValueListSelection}"/>
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>-->
    </UserControl.Resources>

    <UserControl.DataContext>
        <vmodel:FilterEditViewModel/>
    </UserControl.DataContext>
    
    <Grid Background="White">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Grid Margin="5">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="120*" MinWidth="120"/>
                <ColumnDefinition Width="120*" MinWidth="120"/>
                <ColumnDefinition Width="40*" MinWidth="40"/>
                <ColumnDefinition Width="20*" MinWidth="20"/>
                <ColumnDefinition Width="180*" MinWidth="180"/>
            </Grid.ColumnDefinitions>
            <TextBlock Grid.Column="0" Text="Filter Column" Style="{StaticResource HeaderTextBlockStyle}"/>
            <TextBlock Grid.Column="1" Text="Method" Style="{StaticResource HeaderTextBlockStyle}"/>
            <TextBlock Grid.Column="2" Text="Exclude" Style="{StaticResource HeaderTextBlockStyle}"/>
            <TextBlock Grid.Column="3" Text="Type" Style="{StaticResource HeaderTextBlockStyle}"/>
            <TextBlock Grid.Column="4" Text="Values" Style="{StaticResource HeaderTextBlockStyle}"/>
        </Grid>
        <!--<DataGrid ItemsSource="{Binding ResultsFilterOptions}" AutoGenerateColumns="False" CanUserAddRows="False" CanUserDeleteRows="False"
                  DataGridCell.GotFocus="DataGridCell_Selected">
            <DataGrid.Columns>
                <DataGridComboBoxColumn Header="Column Property" ItemsSource="{Binding FilterProperties}" SelectedValueBinding="{Binding ColumnPropertyName}" />
                <DataGridComboBoxColumn Header="Method" ItemsSource="{Binding Source={StaticResource ComparatorTypeEnum}}" SelectedItemBinding="{Binding Comparator}"/>
                <DataGridCheckBoxColumn Header="Exclude" Binding="{Binding Exclude}">
                    <DataGridCheckBoxColumn.CellStyle>
                        <Style TargetType="DataGridCell">
                            <Setter Property="IsEditing" Value="True"/>
                        </Style>
                    </DataGridCheckBoxColumn.CellStyle>
                </DataGridCheckBoxColumn>
                <DataGridTextColumn Header="Type" Binding="{Binding ColumnPropertyType}" IsReadOnly="True"/>
                <DataGridTextColumn Header="Values" Binding="{Binding FilterValues[0]}"/>
            </DataGrid.Columns>
        </DataGrid>-->

        <StackPanel MinHeight="120">
            <ListView ItemsSource="{Binding ResultsFilterOptions}">
                <ListView.View>
                    <GridView>
                        <GridView.Columns>
                            <GridViewColumn Header="Column" Width="180">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <ComboBox ItemsSource="{Binding RelativeSource={RelativeSource AncestorType=ListView}, Path=DataContext.FilterProperties}" SelectedValue="{Binding ColumnPropertyName}"
                                              Width="168" Margin="0,0"/>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <GridViewColumn Header="Method" Width="170">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <ComboBox ItemsSource="{Binding Source={StaticResource ComparatorTypeEnum}}" SelectedItem="{Binding Comparator}"
                                              Width="158" Margin="0,0"/>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <GridViewColumn Header="Exclude" Width="60">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <CheckBox IsChecked="{Binding Exclude}" Margin="10,0"/>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <GridViewColumn Header="Type" DisplayMemberBinding="{Binding ColumnPropertyType.Name}" Width="75"/>
                            <GridViewColumn Header="Values" Width="240">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <ContentControl x:Name="content" Content="{Binding}">
                                            <ContentControl.Style>
                                                <Style TargetType="ContentControl">
                                                    <Setter Property="ContentTemplate" Value="{StaticResource FilterValueEdit}"/>
                                                </Style>
                                            </ContentControl.Style>
                                        </ContentControl>
                                        <DataTemplate.Triggers>
                                            <DataTrigger Binding="{Binding Comparator}" Value="{x:Static enum:ComparatorTypeEnum.InList}">
                                                <Setter TargetName="content" Property="ContentTemplate" Value="{StaticResource FilterValueListSelection}"/>
                                            </DataTrigger>

                                            <!--<TextBox Width="198" Text="{Binding FilterValueString, ValidatesOnExceptions=True}"/>-->
                                        </DataTemplate.Triggers>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <GridViewColumn Header="" Width="30">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <controls:IconButton IconFill="{StaticResource ThemeColor_Red}" Foreground="{StaticResource ThemeColor_Back3}" Margin="-6,0" IconMargin="0,4"
                                                             Command="{Binding RelativeSource={RelativeSource AncestorType=ListView}, Path=DataContext.RemoveFilterCmd}" CommandParameter="{Binding}">
                                            <controls:IconButton.IconContent>
                                                <fa:ImageAwesome Width="30" Height="6" Icon="Minus"/>
                                            </controls:IconButton.IconContent>
                                        </controls:IconButton>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                        </GridView.Columns>
                    </GridView>
                </ListView.View>
            </ListView>
            <controls:IconButton IconContent="{StaticResource PlusThick}" IconFill="Green" Foreground="{StaticResource ThemeColor_Back3}"
                                 CornerRadius="5" HorizontalAlignment="Left" IconMargin="0,-2,0,2"
                                 Content="Add Filter" Command="{Binding AddFilterCmd}"/>
        </StackPanel>

        <!--<ItemsControl>
            <ItemsControl.Items>
                <vmodel:ResultsFilterOptionViewModel/>
            </ItemsControl.Items>
        </ItemsControl>-->
    </Grid>
</UserControl>

<Window x:Name="window" x:Class="iRLeagueManager.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:conv="clr-namespace:iRLeagueManager.Converters"
        xmlns:collection="clr-namespace:System.Collections;assembly=mscorlib"
        xmlns:local="clr-namespace:iRLeagueManager"
        xmlns:views="clr-namespace:iRLeagueManager.Views"
        xmlns:vmodel="clr-namespace:iRLeagueManager.ViewModels"
        xmlns:fa="http://schemas.fontawesome.io/icons/"
        xmlns:interface="clr-namespace:iRLeagueManager.Interfaces;assembly=Communication"
        xmlns:controls="clr-namespace:iRLeagueManager.Controls"
        mc:Ignorable="d"
        WindowState="Normal" Height="800" Width="1400" Background="White"
        FontFamily="{StaticResource Global.FontFamily}"
        FontSize="{StaticResource Global.FontSizeMedium}">

    <Window.Resources>
        <conv:ToUpperConverter x:Key="ToUpperConverter"/>
        <sys:String x:Key="ApplicationName">iRLeagueManager v0.1</sys:String>
        <!--<data:Schedule x:Key="srcSchedule" />-->
        <SolidColorBrush x:Key="ButtonBackgroundBrush" Color="LightGray"/>
        <sys:Double x:Key="HeaderFontSize">32</sys:Double>
        <sys:Double x:Key="FooterFontSize">18</sys:Double>
        <sys:Double x:Key="ContenFontSize">22</sys:Double>
        <Button x:Key="NavigationButton" BorderThickness="0,0,0,2" BorderBrush="Black" />
        <conv:DateTimeConverter x:Key="DateTimeConverter"/>
        <ControlTemplate x:Key="MenuButtonTemplate" TargetType="{x:Type ButtonBase}">
            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" 
                    Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" 
                                  Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" 
                                  Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                  Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" 
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="Button.IsDefaulted" Value="True">
                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" TargetName="border" Value="Gray"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" TargetName="border" Value="DarkGray"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <!--<Setter Property="Background" TargetName="border" Value="{StaticResource }"/>-->
                    <Setter Property="Foreground" Value="#353535"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <SolidColorBrush x:Key="RadioButton.Static.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="RadioButton.Static.Border" Color="#FF707070"/>
        <Style x:Key="OptionMarkFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="14,0,0,0" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="RadioButton.MouseOver.Background" Color="DarkGray"/>
        <SolidColorBrush x:Key="RadioButton.MouseOver.Border" Color="#FF5593FF"/>
        <SolidColorBrush x:Key="RadioButton.MouseOver.Glyph" Color="#FF212121"/>
        <SolidColorBrush x:Key="RadioButton.Disabled.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="RadioButton.Disabled.Border" Color="#FFBCBCBC"/>
        <SolidColorBrush x:Key="RadioButton.Disabled.Glyph" Color="#FF707070"/>
        <SolidColorBrush x:Key="RadioButton.Disabled.Foreground" Color="#353535"/>
        <SolidColorBrush x:Key="RadioButton.Pressed.Background" Color="Gray"/>
        <SolidColorBrush x:Key="RadioButton.Pressed.Border" Color="#FF3C77DD"/>
        <SolidColorBrush x:Key="RadioButton.Pressed.Glyph" Color="#FF212121"/>
        <SolidColorBrush x:Key="RadioButton.Static.Glyph" Color="#FF212121"/>
        <Style x:Key="RadioButtonStyle" TargetType="{x:Type RadioButton}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource RadioButton.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource RadioButton.Static.Border}"/>
            <Setter Property="Foreground" Value="WhiteSmoke"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True" HorizontalAlignment="Stretch">
                            <!--<Border x:Name="radioButtonBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="100" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1,1,2,1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                <Grid x:Name="markGrid" Margin="2">
                                    <Ellipse x:Name="optionMark" Fill="{StaticResource RadioButton.Static.Glyph}" MinWidth="6" MinHeight="6" Opacity="0"/>
                                </Grid>
                            </Border>
                            <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>-->
                            <Border x:Name="radioButtonBorder" BorderBrush="{TemplateBinding BorderBrush}" 
                                    BorderThickness="{TemplateBinding BorderThickness}" 
                                    Background="{TemplateBinding Background}" SnapsToDevicePixels="True"
                                    HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalAlignment}">
                                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" 
                                                  Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                  Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                                  Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" 
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasContent" Value="true">
                                <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.MouseOver.Border}"/>
                                <!--<Setter Property="Fill" TargetName="optionMark" Value="{StaticResource RadioButton.MouseOver.Glyph}"/>-->
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <!--<Setter Property="Background" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.Disabled.Border}"/>-->
                                <Setter Property="Foreground" Value="{StaticResource ThemeColor_Back3}"/>
                                <!--<Setter Property="Fill" TargetName="optionMark" Value="{StaticResource RadioButton.Disabled.Glyph}"/>-->
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.Pressed.Border}"/>
                                <!--<Setter Property="Fill" TargetName="optionMark" Value="{StaticResource RadioButton.Pressed.Glyph}"/>-->
                            </Trigger>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Background" TargetName="radioButtonBorder" Value="{StaticResource ThemeColor_Back1}"/>
                                <Setter Property="Foreground" Value="{StaticResource ThemeColor_Back6}"/>
                                <!--<Setter Property="Opacity" TargetName="optionMark" Value="1"/>-->
                            </Trigger>
                            <Trigger Property="IsChecked" Value="{x:Null}">
                                <Setter Property="Background" TargetName="radioButtonBorder" Value="{Binding Background, RelativeSource={RelativeSource Self}}"/>
                                <Setter Property="Foreground" Value="WhiteSmoke"/>
                                <!--<Setter Property="Opacity" TargetName="optionMark" Value="0.56"/>-->
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--<local:LocationCollection x:Key="LocationCollection"/>-->

        <!--ContentPage DataTemplates-->

        <!--Tree View TemplateSelector-->

    </Window.Resources>
    
    <Window.DataContext>
        <vmodel:MainWindowViewModel/>
    </Window.DataContext>
    
    <Grid>
        <DockPanel VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
            <Grid DockPanel.Dock="Top" Height="50" Background="{StaticResource ThemeColor_DarkBlue}">
                <TextBlock Text="{Binding CurrentLeagueName}" FontFamily="{DynamicResource Header.FontFamily}"
                           FontSize="{DynamicResource Header.FontSize}" 
                           Foreground="SeaShell" VerticalAlignment="Center" 
                           HorizontalAlignment="Center" 
                           Margin="15,0"/>
            </Grid>
            <DockPanel DockPanel.Dock="Bottom">
                <Grid DockPanel.Dock="Bottom" Height="30" Background="{StaticResource ThemeColor_Back2}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <TextBlock Margin="5" Grid.Column="0">
                        <TextBlock.Text>
                            <MultiBinding StringFormat="{}Connected to: {0}">
                                <Binding Path="DbStatus.EndpointAddress" />
                            </MultiBinding>
                        </TextBlock.Text>
                    </TextBlock>
                    <StackPanel Grid.Column="1" Orientation="Horizontal" 
                                HorizontalAlignment="Right" Margin="0"
                                VerticalAlignment="Stretch">
                        <!--<TextBlock Text="{Binding DbStatus.ConnectionStatus}" Margin="5,0"/>-->
                        <fa:ImageAwesome Icon="Refresh" Margin="5,0" VerticalAlignment="Center"
                                         Height="20">
                            <fa:ImageAwesome.Style>
                                <Style TargetType="fa:ImageAwesome">
                                    <Setter Property="Foreground" Value="Black"/>
                                    <Setter Property="Spin" Value="True"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding DbStatus.UpdateStatus}" Value="0">
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                            <Setter Property="Spin" Value="False"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </fa:ImageAwesome.Style>
                        </fa:ImageAwesome>
                        <TextBlock Text="{Binding DbStatus.UpdateStatus}" Margin="5,0" VerticalAlignment="Center"/>
                    </StackPanel>
                </Grid>
                <Grid>
                    <Rectangle Stroke="Black" StrokeThickness="1"/>
                    <TabControl Grid.Row="0" DockPanel.Dock="Top" Height="200">
                        <TabItem Header="Errors" TextElement.FontSize="12" Height="25">
                            <DataGrid ItemsSource="{Binding ErrorLog}" HorizontalAlignment="Stretch" AutoGenerateColumns="False">
                                <DataGrid.Columns>
                                    <DataGridTextColumn Binding="{Binding Timestamp}" Header="Time" IsReadOnly="True" Width="75"/>
                                    <DataGridTextColumn Binding="{Binding Message}" Header="Message" IsReadOnly="True" Width="*"/>
                                </DataGrid.Columns>
                            </DataGrid>
                        </TabItem>
                    </TabControl>
                    <controls:IconButton VerticalAlignment="Top" HorizontalAlignment="Right"
                                         Margin="5" Padding="0" Width="20" Height="20" Command="{Binding CloseErrorsCmd}">
                        <controls:IconButton.IconContent>
                            <Viewbox HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                <StaticResource ResourceKey="closeThick"/>
                            </Viewbox>
                        </controls:IconButton.IconContent>
                    </controls:IconButton>
                    <Grid.Style>
                        <Style TargetType="Grid">
                            <Setter Property="Visibility" Value="Collapsed"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsErrorsOpen}" Value="True">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Grid.Style>
                </Grid>
            </DockPanel>
            <Grid x:Name="MenuGrid" DockPanel.Dock="Left" Width="Auto" Background="{StaticResource ThemeColor_Back5}" 
                  TextElement.Foreground="WhiteSmoke" TextElement.FontFamily="{DynamicResource Menu.FontFamily}"
                  TextElement.FontSize="{DynamicResource Menu.FontSizeLarge}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="250" />
                    <!--<ColumnDefinition Width="0" />-->
                </Grid.ColumnDefinitions>
                <StackPanel x:Name="Menu" Grid.Column="0" Orientation="Vertical" Margin="0,0,0,0">
                    <StackPanel Orientation="Vertical" MinHeight="40">
                        <ComboBox ItemsSource="{Binding SeasonList}" SelectedItem="{Binding SelectedSeason}" 
                                  Padding="10" HorizontalContentAlignment="Center"
                                  DisplayMemberPath="SeasonName" />
                        <!--<StackPanel Orientation="Horizontal" DataContext="{Binding CurrentSeason}">
                            <TextBlock Text="{Binding SeasonStart, Converter={StaticResource DateTimeConverter}}" />
                            <TextBlock Text=" - " />
                            <TextBlock Text="{Binding SeasonEnd, Converter={StaticResource DateTimeConverter}}" />
                            <StackPanel.Style>
                                <Style TargetType="StackPanel">
                                    <Setter Property="Visibility" Value="Visible" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding SeasonStart}" Value="{x:Null}" >
                                            <Setter Property="Visibility" Value="Collapsed" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding SeasonEnd}" Value="{x:Null}" >
                                            <Setter Property="Visibility" Value="Collapsed" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </StackPanel.Style>
                        </StackPanel>-->
                    </StackPanel>
                    <RadioButton GroupName="Menu" Content="Settings" Click="SettingsButton_Click" IsEnabled="True"/>
                    <RadioButton GroupName="Menu" Content="Schedules" Click="SchedulesButton_Click" />
                    <RadioButton GroupName="Menu" Content="Results" Click="ResultsButton_Click" IsEnabled="True"/>
                    <RadioButton GroupName="Menu" Content="Incidents" Click="ReviewsButton_Click" IsEnabled="True"/>
                    <RadioButton GroupName="Menu" Content="Standings" Click="StandingsButton_Click" IsEnabled="True"/>
                    <Separator Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" Foreground="{StaticResource ThemeColor_Back4}" Height="2" Margin="15,4"/>
                    <RadioButton GroupName="Menu" Content="Calendar" Click="RaceCalendarButton_Click" />
                    <RadioButton GroupName="Menu" Content="Teams" Click="TeamsButton_Click" IsEnabled="True"/>
                    <RadioButton GroupName="Menu" Content="Stats" IsEnabled="False"/>
                    <StackPanel.Resources>
                        <Style TargetType="Button">
                            <Setter Property="Template" Value="{StaticResource MenuButtonTemplate}" />
                            <Setter Property="Margin" Value="0,-2" />
                            <Setter Property="Padding" Value="0,18"/>
                            <Setter Property="Background" Value="Transparent" />
                            <Setter Property="Foreground" Value="WhiteSmoke" />
                            <Setter Property="BorderThickness" Value="0,4,0,4" />
                        </Style>
                        <Style TargetType="RadioButton" BasedOn="{StaticResource RadioButtonStyle}">
                            <Setter Property="Margin" Value="0,-2" />
                            <Setter Property="Padding" Value="0,18"/>
                            <Setter Property="Background" Value="Transparent" />
                            <Setter Property="Foreground" Value="WhiteSmoke" />
                            <Setter Property="BorderThickness" Value="0,0,0,0" />
                        </Style>
                    </StackPanel.Resources>
                </StackPanel>

                <Grid VerticalAlignment="Bottom">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <StackPanel Grid.Row="0" Orientation="Horizontal" Margin="0,0" Grid.ColumnSpan="2">
                        <controls:IconButton Click="GitHub_Click" ToolTip="Open iRLeagueManger on GitHub" VerticalAlignment="Center" Margin="4">
                            <controls:IconButton.IconContent>
                                <fa:ImageAwesome Icon="Github" Height="25" Foreground="{StaticResource ThemeColor_Back1}"/>
                            </controls:IconButton.IconContent>
                        </controls:IconButton>
                        <TextBlock VerticalAlignment="Center" FontSize="12">
                            <Hyperlink NavigateUri="https://github.com/SSchulze1989/iRLeagueManager/issues/new?assignees=SSchulze1989&amp;labels=bug&amp;template=bug_report.md&amp;title=" 
                                       RequestNavigate="Hyperlink_RequestNavigate" ToolTip="File a Bug report on GitHub">BugReport</Hyperlink>
                        </TextBlock>
                        <Separator Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" Height="15" Foreground="{StaticResource ThemeColor_Back4}" VerticalAlignment="Center"
                                   Margin="5"/>
                        <TextBlock VerticalAlignment="Center" FontSize="12">
                            <Hyperlink NavigateUri="https://github.com/SSchulze1989/iRLeagueManager/issues/new?assignees=&amp;labels=enhancement&amp;template=feature_request.md&amp;title="
                                       RequestNavigate="Hyperlink_RequestNavigate" ToolTip="Create a featrure Request on GitHub">Feature Request</Hyperlink>
                        </TextBlock>
                    </StackPanel>                  

                    <TextBlock Grid.Row="1" Grid.Column="0" Text="{Binding CurrentUser.FullName, Converter={StaticResource ToUpperConverter}}" 
                               Foreground="{StaticResource ThemeColor_Blue}" 
                               FontSize="{StaticResource Global.FontSizeSmall}" VerticalAlignment="Bottom" Margin="0,20" HorizontalAlignment="Center"/>
                    <controls:IconButton Grid.Row="1" Grid.Column="1" IconFill="{StaticResource ThemeColor_Blue}"
                                         Foreground="{StaticResource ThemeColor_Back0}" Margin="0" Padding="15"
                                         Click="RefreshButtonClick">
                        <controls:IconButton.IconContent>
                            <fa:ImageAwesome Icon="Refresh" Height="25"/>
                        </controls:IconButton.IconContent>
                    </controls:IconButton>
                </Grid>
                <!--<GridSplitter Grid.Column="0" Width="5"/>-->
            </Grid>
            <Grid>
                <ContentControl x:Name="MainContent">
                    <ContentControl.Resources>
                        <DataTemplate DataType="{x:Type vmodel:CalendarViewModel}">
                            <views:CalendarControl/>
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type vmodel:ReviewsPageViewModel}">
                            <views:ReviewsControl/>
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type vmodel:SchedulerViewModel}">
                            <views:SchedulerControl/>
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type vmodel:ResultsPageViewModel}">
                            <views:ScoredResultControl/>
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type vmodel:SettingsPageViewModel}">
                            <views:SettingsControl/>
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type vmodel:StandingsPageViewModel}">
                            <views:StandingsControl/>
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type vmodel:TeamsPageViewModel}">
                            <views:TeamsPageControl/>
                        </DataTemplate>
                    </ContentControl.Resources>
                </ContentControl>
            </Grid>
        </DockPanel>
    </Grid>

    <!--<Grid Margin="5" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Width="Auto" >
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        -->
    <!--<Grid.DataContext>
            <local:ScheduleViewModel/>
        </Grid.DataContext>-->
    <!--
        <DataGrid x:Name="dg" Visibility="Collapsed" DataContext="{Binding Sessions}" ItemsSource="{Binding}"  HorizontalAlignment="Stretch" Margin="15,15,10,10" VerticalAlignment="Top" IsSynchronizedWithCurrentItem="True" AutoGenerateColumns="False">
            <DataGrid.Columns>
                <DataGridTextColumn Binding="{Binding RaceId}" ClipboardContentBinding="{x:Null}" Header="RaceId"/>
                <DataGridTemplateColumn ClipboardContentBinding="{x:Null}" Header="Date">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <DatePicker Text="{Binding Date, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" SelectedDateChanged="DatePicker_SelectedDateChanged"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTextColumn Binding="{Binding SessionType}" ClipboardContentBinding="{x:Null}" Header="Session Type"/>
            </DataGrid.Columns>
        </DataGrid>
        <Button Content="Save" Command="{Binding saveCommand}" Grid.Column="1" HorizontalAlignment="Left" Height="55" Margin="15,15,0,0" VerticalAlignment="Top" Width="249" />
        <Button Content="Add Race" Command="{Binding addRaceCommand}" Grid.Column="1" HorizontalAlignment="Left" Height="56" Margin="14,76,0,0" VerticalAlignment="Top" Width="249" />
        <Button Content="Delete Race" Command="{Binding deleteRaceCommand}" CommandParameter="{Binding ElementName=dg, Path=SelectedItem}" Grid.Column="1" HorizontalAlignment="Left" Height="55" Margin="14,139,0,0" VerticalAlignment="Top" Width="249" />
        <Button Content="Refresh" Command="{Binding refreshCommand}" Grid.Column="1" HorizontalAlignment="Left" Height="55" Margin="14,201,0,0" VerticalAlignment="Top" Width="249" />
        <DatePicker HorizontalAlignment="Left" Grid.Column="1" Margin="15,280,0,0" Width="250"/>
    </Grid>-->
</Window>